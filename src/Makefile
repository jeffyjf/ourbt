# Makefile.in generated by automake 1.15 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/libtorrent-rasterbar
pkgincludedir = $(includedir)/libtorrent-rasterbar
pkglibdir = $(libdir)/libtorrent-rasterbar
pkglibexecdir = $(libexecdir)/libtorrent-rasterbar
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
target_triplet = x86_64-pc-linux-gnu
#am__append_1 = -ldl
#am__append_2 = -liphlpapi -lws2_32 -lwsock32
#am__append_3 = -DWIN32_LEAN_AND_MEAN -D__USE_W32_SOCKETS -DWIN32 -D_WIN32
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_python.m4 \
	$(top_srcdir)/m4/ax_boost_system.m4 \
	$(top_srcdir)/m4/ax_check_openssl.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 \
	$(top_srcdir)/m4/ax_python_devel.m4 \
	$(top_srcdir)/m4/gettext-lib.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/pkgconfig.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libtorrent_rasterbar_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__libtorrent_rasterbar_la_SOURCES_DIST = web_connection_base.cpp \
	alert.cpp alert_manager.cpp announce_entry.cpp assert.cpp \
	bandwidth_limit.cpp bandwidth_manager.cpp \
	bandwidth_queue_entry.cpp bdecode.cpp bitfield.cpp \
	bloom_filter.cpp broadcast_socket.cpp block_cache.cpp \
	bt_peer_connection.cpp chained_buffer.cpp choker.cpp \
	close_reason.cpp cpuid.cpp crc32c.cpp create_torrent.cpp \
	disk_buffer_holder.cpp disk_buffer_pool.cpp disk_io_job.cpp \
	disk_io_thread.cpp disk_io_thread_pool.cpp disk_job_fence.cpp \
	disk_job_pool.cpp entry.cpp enum_net.cpp error_code.cpp \
	escape_string.cpp file.cpp tfsFile.cpp path.cpp file_pool.cpp \
	file_storage.cpp fingerprint.cpp generate_peer_id.cpp gzip.cpp \
	hasher.cpp hex.cpp http_connection.cpp http_parser.cpp \
	http_seed_connection.cpp http_stream.cpp \
	http_tracker_connection.cpp i2p_stream.cpp identify_client.cpp \
	instantiate_connection.cpp ip_filter.cpp ip_notifier.cpp \
	ip_voter.cpp lazy_bdecode.cpp listen_socket_handle.cpp lsd.cpp \
	magnet_uri.cpp merkle.cpp natpmp.cpp openssl.cpp parse_url.cpp \
	part_file.cpp pe_crypto.cpp performance_counters.cpp \
	peer_connection.cpp peer_connection_handle.cpp peer_class.cpp \
	peer_class_set.cpp piece_picker.cpp platform_util.cpp \
	packet_buffer.cpp proxy_base.cpp peer_list.cpp puff.cpp \
	random.cpp receive_buffer.cpp read_resume_data.cpp \
	write_resume_data.cpp request_blocks.cpp resolve_links.cpp \
	resolver.cpp session.cpp session_call.cpp session_handle.cpp \
	session_impl.cpp session_settings.cpp proxy_settings.cpp \
	settings_pack.cpp sha1_hash.cpp smart_ban.cpp socket_io.cpp \
	socket_type.cpp socks5_stream.cpp stat.cpp stat_cache.cpp \
	storage.cpp storage_piece_set.cpp storage_utils.cpp \
	session_stats.cpp string_util.cpp torrent.cpp \
	torrent_handle.cpp torrent_info.cpp torrent_peer.cpp \
	torrent_peer_allocator.cpp torrent_status.cpp time.cpp \
	timestamp_history.cpp tracker_manager.cpp udp_socket.cpp \
	udp_tracker_connection.cpp upnp.cpp ut_metadata.cpp ut_pex.cpp \
	utf8.cpp utp_socket_manager.cpp utp_stream.cpp \
	web_peer_connection.cpp xml_parse.cpp version.cpp \
	file_progress.cpp ffs.cpp add_torrent_params.cpp peer_info.cpp \
	stack_allocator.cpp sha1.cpp sha512.cpp kademlia/dht_state.cpp \
	kademlia/dht_storage.cpp kademlia/dht_tracker.cpp \
	kademlia/find_data.cpp kademlia/put_data.cpp kademlia/msg.cpp \
	kademlia/node.cpp kademlia/node_entry.cpp kademlia/node_id.cpp \
	kademlia/refresh.cpp kademlia/routing_table.cpp \
	kademlia/rpc_manager.cpp kademlia/traversal_algorithm.cpp \
	kademlia/dos_blocker.cpp kademlia/get_peers.cpp \
	kademlia/get_item.cpp kademlia/item.cpp kademlia/ed25519.cpp \
	kademlia/sample_infohashes.cpp kademlia/dht_settings.cpp \
	../ed25519/src/add_scalar.cpp ../ed25519/src/fe.cpp \
	../ed25519/src/ge.cpp ../ed25519/src/key_exchange.cpp \
	../ed25519/src/keypair.cpp ../ed25519/src/sc.cpp \
	../ed25519/src/sign.cpp ../ed25519/src/verify.cpp \
	hasher512.cpp
am__dirstamp = $(am__leading_dot)dirstamp
#am__objects_1 = kademlia/libtorrent_rasterbar_la-dht_state.lo \
#	kademlia/libtorrent_rasterbar_la-dht_storage.lo \
#	kademlia/libtorrent_rasterbar_la-dht_tracker.lo \
#	kademlia/libtorrent_rasterbar_la-find_data.lo \
#	kademlia/libtorrent_rasterbar_la-put_data.lo \
#	kademlia/libtorrent_rasterbar_la-msg.lo \
#	kademlia/libtorrent_rasterbar_la-node.lo \
#	kademlia/libtorrent_rasterbar_la-node_entry.lo \
#	kademlia/libtorrent_rasterbar_la-node_id.lo \
#	kademlia/libtorrent_rasterbar_la-refresh.lo \
#	kademlia/libtorrent_rasterbar_la-routing_table.lo \
#	kademlia/libtorrent_rasterbar_la-rpc_manager.lo \
#	kademlia/libtorrent_rasterbar_la-traversal_algorithm.lo \
#	kademlia/libtorrent_rasterbar_la-dos_blocker.lo \
#	kademlia/libtorrent_rasterbar_la-get_peers.lo \
#	kademlia/libtorrent_rasterbar_la-get_item.lo \
#	kademlia/libtorrent_rasterbar_la-item.lo \
#	kademlia/libtorrent_rasterbar_la-ed25519.lo \
#	kademlia/libtorrent_rasterbar_la-sample_infohashes.lo \
#	kademlia/libtorrent_rasterbar_la-dht_settings.lo \
#	../ed25519/src/libtorrent_rasterbar_la-add_scalar.lo \
#	../ed25519/src/libtorrent_rasterbar_la-fe.lo \
#	../ed25519/src/libtorrent_rasterbar_la-ge.lo \
#	../ed25519/src/libtorrent_rasterbar_la-key_exchange.lo \
#	../ed25519/src/libtorrent_rasterbar_la-keypair.lo \
#	../ed25519/src/libtorrent_rasterbar_la-sc.lo \
#	../ed25519/src/libtorrent_rasterbar_la-sign.lo \
#	../ed25519/src/libtorrent_rasterbar_la-verify.lo \
#	libtorrent_rasterbar_la-hasher512.lo
am_libtorrent_rasterbar_la_OBJECTS =  \
	libtorrent_rasterbar_la-web_connection_base.lo \
	libtorrent_rasterbar_la-alert.lo \
	libtorrent_rasterbar_la-alert_manager.lo \
	libtorrent_rasterbar_la-announce_entry.lo \
	libtorrent_rasterbar_la-assert.lo \
	libtorrent_rasterbar_la-bandwidth_limit.lo \
	libtorrent_rasterbar_la-bandwidth_manager.lo \
	libtorrent_rasterbar_la-bandwidth_queue_entry.lo \
	libtorrent_rasterbar_la-bdecode.lo \
	libtorrent_rasterbar_la-bitfield.lo \
	libtorrent_rasterbar_la-bloom_filter.lo \
	libtorrent_rasterbar_la-broadcast_socket.lo \
	libtorrent_rasterbar_la-block_cache.lo \
	libtorrent_rasterbar_la-bt_peer_connection.lo \
	libtorrent_rasterbar_la-chained_buffer.lo \
	libtorrent_rasterbar_la-choker.lo \
	libtorrent_rasterbar_la-close_reason.lo \
	libtorrent_rasterbar_la-cpuid.lo \
	libtorrent_rasterbar_la-crc32c.lo \
	libtorrent_rasterbar_la-create_torrent.lo \
	libtorrent_rasterbar_la-disk_buffer_holder.lo \
	libtorrent_rasterbar_la-disk_buffer_pool.lo \
	libtorrent_rasterbar_la-disk_io_job.lo \
	libtorrent_rasterbar_la-disk_io_thread.lo \
	libtorrent_rasterbar_la-disk_io_thread_pool.lo \
	libtorrent_rasterbar_la-disk_job_fence.lo \
	libtorrent_rasterbar_la-disk_job_pool.lo \
	libtorrent_rasterbar_la-entry.lo \
	libtorrent_rasterbar_la-enum_net.lo \
	libtorrent_rasterbar_la-error_code.lo \
	libtorrent_rasterbar_la-escape_string.lo \
	libtorrent_rasterbar_la-file.lo \
	libtorrent_rasterbar_la-tfsFile.lo \
	libtorrent_rasterbar_la-path.lo \
	libtorrent_rasterbar_la-file_pool.lo \
	libtorrent_rasterbar_la-file_storage.lo \
	libtorrent_rasterbar_la-fingerprint.lo \
	libtorrent_rasterbar_la-generate_peer_id.lo \
	libtorrent_rasterbar_la-gzip.lo \
	libtorrent_rasterbar_la-hasher.lo \
	libtorrent_rasterbar_la-hex.lo \
	libtorrent_rasterbar_la-http_connection.lo \
	libtorrent_rasterbar_la-http_parser.lo \
	libtorrent_rasterbar_la-http_seed_connection.lo \
	libtorrent_rasterbar_la-http_stream.lo \
	libtorrent_rasterbar_la-http_tracker_connection.lo \
	libtorrent_rasterbar_la-i2p_stream.lo \
	libtorrent_rasterbar_la-identify_client.lo \
	libtorrent_rasterbar_la-instantiate_connection.lo \
	libtorrent_rasterbar_la-ip_filter.lo \
	libtorrent_rasterbar_la-ip_notifier.lo \
	libtorrent_rasterbar_la-ip_voter.lo \
	libtorrent_rasterbar_la-lazy_bdecode.lo \
	libtorrent_rasterbar_la-listen_socket_handle.lo \
	libtorrent_rasterbar_la-lsd.lo \
	libtorrent_rasterbar_la-magnet_uri.lo \
	libtorrent_rasterbar_la-merkle.lo \
	libtorrent_rasterbar_la-natpmp.lo \
	libtorrent_rasterbar_la-openssl.lo \
	libtorrent_rasterbar_la-parse_url.lo \
	libtorrent_rasterbar_la-part_file.lo \
	libtorrent_rasterbar_la-pe_crypto.lo \
	libtorrent_rasterbar_la-performance_counters.lo \
	libtorrent_rasterbar_la-peer_connection.lo \
	libtorrent_rasterbar_la-peer_connection_handle.lo \
	libtorrent_rasterbar_la-peer_class.lo \
	libtorrent_rasterbar_la-peer_class_set.lo \
	libtorrent_rasterbar_la-piece_picker.lo \
	libtorrent_rasterbar_la-platform_util.lo \
	libtorrent_rasterbar_la-packet_buffer.lo \
	libtorrent_rasterbar_la-proxy_base.lo \
	libtorrent_rasterbar_la-peer_list.lo \
	libtorrent_rasterbar_la-puff.lo \
	libtorrent_rasterbar_la-random.lo \
	libtorrent_rasterbar_la-receive_buffer.lo \
	libtorrent_rasterbar_la-read_resume_data.lo \
	libtorrent_rasterbar_la-write_resume_data.lo \
	libtorrent_rasterbar_la-request_blocks.lo \
	libtorrent_rasterbar_la-resolve_links.lo \
	libtorrent_rasterbar_la-resolver.lo \
	libtorrent_rasterbar_la-session.lo \
	libtorrent_rasterbar_la-session_call.lo \
	libtorrent_rasterbar_la-session_handle.lo \
	libtorrent_rasterbar_la-session_impl.lo \
	libtorrent_rasterbar_la-session_settings.lo \
	libtorrent_rasterbar_la-proxy_settings.lo \
	libtorrent_rasterbar_la-settings_pack.lo \
	libtorrent_rasterbar_la-sha1_hash.lo \
	libtorrent_rasterbar_la-smart_ban.lo \
	libtorrent_rasterbar_la-socket_io.lo \
	libtorrent_rasterbar_la-socket_type.lo \
	libtorrent_rasterbar_la-socks5_stream.lo \
	libtorrent_rasterbar_la-stat.lo \
	libtorrent_rasterbar_la-stat_cache.lo \
	libtorrent_rasterbar_la-storage.lo \
	libtorrent_rasterbar_la-storage_piece_set.lo \
	libtorrent_rasterbar_la-storage_utils.lo \
	libtorrent_rasterbar_la-session_stats.lo \
	libtorrent_rasterbar_la-string_util.lo \
	libtorrent_rasterbar_la-torrent.lo \
	libtorrent_rasterbar_la-torrent_handle.lo \
	libtorrent_rasterbar_la-torrent_info.lo \
	libtorrent_rasterbar_la-torrent_peer.lo \
	libtorrent_rasterbar_la-torrent_peer_allocator.lo \
	libtorrent_rasterbar_la-torrent_status.lo \
	libtorrent_rasterbar_la-time.lo \
	libtorrent_rasterbar_la-timestamp_history.lo \
	libtorrent_rasterbar_la-tracker_manager.lo \
	libtorrent_rasterbar_la-udp_socket.lo \
	libtorrent_rasterbar_la-udp_tracker_connection.lo \
	libtorrent_rasterbar_la-upnp.lo \
	libtorrent_rasterbar_la-ut_metadata.lo \
	libtorrent_rasterbar_la-ut_pex.lo \
	libtorrent_rasterbar_la-utf8.lo \
	libtorrent_rasterbar_la-utp_socket_manager.lo \
	libtorrent_rasterbar_la-utp_stream.lo \
	libtorrent_rasterbar_la-web_peer_connection.lo \
	libtorrent_rasterbar_la-xml_parse.lo \
	libtorrent_rasterbar_la-version.lo \
	libtorrent_rasterbar_la-file_progress.lo \
	libtorrent_rasterbar_la-ffs.lo \
	libtorrent_rasterbar_la-add_torrent_params.lo \
	libtorrent_rasterbar_la-peer_info.lo \
	libtorrent_rasterbar_la-stack_allocator.lo \
	libtorrent_rasterbar_la-sha1.lo \
	libtorrent_rasterbar_la-sha512.lo $(am__objects_1)
libtorrent_rasterbar_la_OBJECTS =  \
	$(am_libtorrent_rasterbar_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libtorrent_rasterbar_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libtorrent_rasterbar_la_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libtorrent_rasterbar_la_SOURCES)
DIST_SOURCES = $(am__libtorrent_rasterbar_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /root/linux-client/libtorrent/build-aux/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /root/linux-client/libtorrent/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /root/linux-client/libtorrent/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /root/linux-client/libtorrent/build-aux/missing automake-1.15
AWK = gawk
BOOST_CPPFLAGS = -I/usr/include
BOOST_LDFLAGS = -L/usr/lib/x86_64-linux-gnu
BOOST_PYTHON_LIB = 
BOOST_SYSTEM_LIB = -lboost_system
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -pthread -g -O2 -fvisibility=hidden
COMPILETIME_OPTIONS =  -DTORRENT_USE_OPENSSL -DTORRENT_USE_LIBCRYPTO  -DTORRENT_DISABLE_DHT  -DBOOST_ASIO_HAS_STD_CHRONO=1  -DBOOST_EXCEPTION_DISABLE  -DBOOST_ASIO_ENABLE_CANCELIO  -DTORRENT_LINKING_SHARED 
CPP = gcc -E
CPPFLAGS = -I/usr/include 
CXX = g++ -std=c++14
CXXCPP = g++ -E -std=c++14
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -fpermissive -ftemplate-depth=512 -Wno-format-zero-length -fvisibility=hidden -fvisibility-inlines-hidden
CYGPATH_W = echo
DEBUGFLAGS = -g0 -Os
DEFS = -DPACKAGE_NAME=\"libtorrent-rasterbar\" -DPACKAGE_TARNAME=\"libtorrent-rasterbar\" -DPACKAGE_VERSION=\"1.2.18\" -DPACKAGE_STRING=\"libtorrent-rasterbar\ 1.2.18\" -DPACKAGE_BUGREPORT=\"arvid@libtorrent.org\" -DPACKAGE_URL=\"http://www.libtorrent.org\" -DPACKAGE=\"libtorrent-rasterbar\" -DVERSION=\"1.2.18\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_PTHREAD_PRIO_INHERIT=1 -DHAVE_PTHREAD=1 -DHAVE_BOOST=/\*\*/ -DHAVE_CXX14=1 -DHAVE_BOOST_SYSTEM=/\*\*/ -DHAVE_CLOCK_GETTIME=1 -DNDEBUG=1 -DTORRENT_USE_INVARIANT_CHECKS=0 -DTORRENT_USE_OPENSSL=1 -DTORRENT_USE_LIBCRYPTO=1 -DTORRENT_DISABLE_DHT=1 -DHAVE_ICONV=1 -DICONV_CONST= -DBOOST_ASIO_HAS_STD_CHRONO=1 -DBOOST_EXCEPTION_DISABLE=1 -DBOOST_ASIO_ENABLE_CANCELIO=1 -DTORRENT_BUILDING_SHARED=1
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
HAVE_CXX11 = 
HAVE_CXX14 = 1
HAVE_CXX17 = 
ICONV_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTERFACE_VERSION_INFO = 10:0:0
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = -L/usr/lib/x86_64-linux-gnu  -fvisibility=hidden -fvisibility-inlines-hidden
LIBICONV = 
LIBOBJS = 
LIBS = -lboost_system -lpthread 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = cp -pR
LTLIBICONV = 
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = 
MAKEINFO = ${SHELL} /root/linux-client/libtorrent/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OPENSSL_INCLUDES = 
OPENSSL_LDFLAGS = 
OPENSSL_LIBS = -lssl -lcrypto
OTOOL = 
OTOOL64 = 
PACKAGE = libtorrent-rasterbar
PACKAGE_BUGREPORT = arvid@libtorrent.org
PACKAGE_NAME = libtorrent-rasterbar
PACKAGE_STRING = libtorrent-rasterbar 1.2.18
PACKAGE_TARNAME = libtorrent-rasterbar
PACKAGE_URL = http://www.libtorrent.org
PACKAGE_VERSION = 1.2.18
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = -lpthread
PYTHON = 
PYTHON_CPPFLAGS = 
PYTHON_CXXFLAGS =  -Wno-deprecated-declarations
PYTHON_EXEC_PREFIX = 
PYTHON_EXTRA_LDFLAGS = 
PYTHON_EXTRA_LIBS = 
PYTHON_INSTALL_PARAMS = --prefix=$(DESTDIR)$(prefix)
PYTHON_LIBS = 
PYTHON_PLATFORM = 
PYTHON_PREFIX = 
PYTHON_SITE_PKG = 
PYTHON_VERSION = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.2.18
abs_builddir = /root/linux-client/libtorrent/src
abs_srcdir = /root/linux-client/libtorrent/src
abs_top_builddir = /root/linux-client/libtorrent
abs_top_srcdir = /root/linux-client/libtorrent
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /root/linux-client/libtorrent/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = 
pkgpythondir = 
prefix = /opt/libtorrent
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = 
pythondir = 
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-pc-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AUTOMAKE_OPTIONS = subdir-objects
lib_LTLIBRARIES = libtorrent-rasterbar.la
#KADEMLIA_SOURCES = \
#  kademlia/dht_state.cpp        \
#  kademlia/dht_storage.cpp      \
#  kademlia/dht_tracker.cpp      \
#  kademlia/find_data.cpp        \
#  kademlia/put_data.cpp         \
#  kademlia/msg.cpp              \
#  kademlia/node.cpp             \
#  kademlia/node_entry.cpp       \
#  kademlia/node_id.cpp          \
#  kademlia/refresh.cpp          \
#  kademlia/routing_table.cpp    \
#  kademlia/rpc_manager.cpp      \
#  kademlia/traversal_algorithm.cpp \
#  kademlia/dos_blocker.cpp      \
#  kademlia/get_peers.cpp        \
#  kademlia/get_item.cpp         \
#  kademlia/item.cpp             \
#  kademlia/ed25519.cpp          \
#  kademlia/sample_infohashes.cpp \
#  kademlia/dht_settings.cpp     \
#  ../ed25519/src/add_scalar.cpp \
#  ../ed25519/src/fe.cpp         \
#  ../ed25519/src/ge.cpp         \
#  ../ed25519/src/key_exchange.cpp \
#  ../ed25519/src/keypair.cpp    \
#  ../ed25519/src/sc.cpp         \
#  ../ed25519/src/sign.cpp       \
#  ../ed25519/src/verify.cpp     \
#  hasher512.cpp

libtorrent_rasterbar_la_SOURCES = \
  web_connection_base.cpp         \
  alert.cpp                       \
  alert_manager.cpp               \
  announce_entry.cpp              \
  assert.cpp                      \
  bandwidth_limit.cpp             \
  bandwidth_manager.cpp           \
  bandwidth_queue_entry.cpp       \
  bdecode.cpp                     \
  bitfield.cpp                    \
  bloom_filter.cpp                \
  broadcast_socket.cpp            \
  block_cache.cpp                 \
  bt_peer_connection.cpp          \
  chained_buffer.cpp              \
  choker.cpp                      \
  close_reason.cpp                \
  cpuid.cpp                       \
  crc32c.cpp                      \
  create_torrent.cpp              \
  disk_buffer_holder.cpp          \
  disk_buffer_pool.cpp            \
  disk_io_job.cpp                 \
  disk_io_thread.cpp              \
  disk_io_thread_pool.cpp         \
  disk_job_fence.cpp              \
  disk_job_pool.cpp               \
  entry.cpp                       \
  enum_net.cpp                    \
  error_code.cpp                  \
  escape_string.cpp               \
  file.cpp                        \
  tfsFile.cpp                     \
  path.cpp                        \
  file_pool.cpp                   \
  file_storage.cpp                \
  fingerprint.cpp                 \
  generate_peer_id.cpp            \
  gzip.cpp                        \
  hasher.cpp                      \
  hex.cpp                         \
  http_connection.cpp             \
  http_parser.cpp                 \
  http_seed_connection.cpp        \
  http_stream.cpp                 \
  http_tracker_connection.cpp     \
  i2p_stream.cpp                  \
  identify_client.cpp             \
  instantiate_connection.cpp      \
  ip_filter.cpp                   \
  ip_notifier.cpp                 \
  ip_voter.cpp                    \
  lazy_bdecode.cpp                \
  listen_socket_handle.cpp        \
  lsd.cpp                         \
  magnet_uri.cpp                  \
  merkle.cpp                      \
  natpmp.cpp                      \
  openssl.cpp                     \
  parse_url.cpp                   \
  part_file.cpp                   \
  pe_crypto.cpp                   \
  performance_counters.cpp        \
  peer_connection.cpp             \
  peer_connection_handle.cpp      \
  peer_class.cpp                  \
  peer_class_set.cpp              \
  piece_picker.cpp                \
  platform_util.cpp               \
  packet_buffer.cpp               \
  proxy_base.cpp                  \
  peer_list.cpp                   \
  puff.cpp                        \
  random.cpp                      \
  receive_buffer.cpp              \
  read_resume_data.cpp            \
  write_resume_data.cpp           \
  request_blocks.cpp              \
  resolve_links.cpp               \
  resolver.cpp                    \
  session.cpp                     \
  session_call.cpp                \
  session_handle.cpp              \
  session_impl.cpp                \
  session_settings.cpp            \
  proxy_settings.cpp              \
  settings_pack.cpp               \
  sha1_hash.cpp                   \
  smart_ban.cpp                   \
  socket_io.cpp                   \
  socket_type.cpp                 \
  socks5_stream.cpp               \
  stat.cpp                        \
  stat_cache.cpp                  \
  storage.cpp                     \
  storage_piece_set.cpp           \
  storage_utils.cpp               \
  session_stats.cpp               \
  string_util.cpp                 \
  torrent.cpp                     \
  torrent_handle.cpp              \
  torrent_info.cpp                \
  torrent_peer.cpp                \
  torrent_peer_allocator.cpp      \
  torrent_status.cpp              \
  time.cpp                        \
  timestamp_history.cpp           \
  tracker_manager.cpp             \
  udp_socket.cpp                  \
  udp_tracker_connection.cpp      \
  upnp.cpp                        \
  ut_metadata.cpp                 \
  ut_pex.cpp                      \
  utf8.cpp                        \
  utp_socket_manager.cpp          \
  utp_stream.cpp                  \
  web_peer_connection.cpp         \
  xml_parse.cpp                   \
  version.cpp                     \
  file_progress.cpp               \
  ffs.cpp                         \
  add_torrent_params.cpp          \
  peer_info.cpp                   \
  stack_allocator.cpp             \
  sha1.cpp                        \
  sha512.cpp                      \
  \
  $(KADEMLIA_SOURCES)

AM_CPPFLAGS = -DTORRENT_BUILDING_LIBRARY -g0 -Os
AM_LDFLAGS = 
DEFAULT_INCLUDES = -I$(top_srcdir)/include 
libtorrent_rasterbar_la_LDFLAGS = -version-info $(INTERFACE_VERSION_INFO)
libtorrent_rasterbar_la_LIBADD = -lssl -lcrypto $(am__append_1) \
	$(am__append_2)
libtorrent_rasterbar_la_CPPFLAGS = $(AM_CPPFLAGS) $(am__append_3)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
kademlia/$(am__dirstamp):
	@$(MKDIR_P) kademlia
	@: > kademlia/$(am__dirstamp)
kademlia/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) kademlia/$(DEPDIR)
	@: > kademlia/$(DEPDIR)/$(am__dirstamp)
kademlia/libtorrent_rasterbar_la-dht_state.lo:  \
	kademlia/$(am__dirstamp) kademlia/$(DEPDIR)/$(am__dirstamp)
kademlia/libtorrent_rasterbar_la-dht_storage.lo:  \
	kademlia/$(am__dirstamp) kademlia/$(DEPDIR)/$(am__dirstamp)
kademlia/libtorrent_rasterbar_la-dht_tracker.lo:  \
	kademlia/$(am__dirstamp) kademlia/$(DEPDIR)/$(am__dirstamp)
kademlia/libtorrent_rasterbar_la-find_data.lo:  \
	kademlia/$(am__dirstamp) kademlia/$(DEPDIR)/$(am__dirstamp)
kademlia/libtorrent_rasterbar_la-put_data.lo:  \
	kademlia/$(am__dirstamp) kademlia/$(DEPDIR)/$(am__dirstamp)
kademlia/libtorrent_rasterbar_la-msg.lo: kademlia/$(am__dirstamp) \
	kademlia/$(DEPDIR)/$(am__dirstamp)
kademlia/libtorrent_rasterbar_la-node.lo: kademlia/$(am__dirstamp) \
	kademlia/$(DEPDIR)/$(am__dirstamp)
kademlia/libtorrent_rasterbar_la-node_entry.lo:  \
	kademlia/$(am__dirstamp) kademlia/$(DEPDIR)/$(am__dirstamp)
kademlia/libtorrent_rasterbar_la-node_id.lo: kademlia/$(am__dirstamp) \
	kademlia/$(DEPDIR)/$(am__dirstamp)
kademlia/libtorrent_rasterbar_la-refresh.lo: kademlia/$(am__dirstamp) \
	kademlia/$(DEPDIR)/$(am__dirstamp)
kademlia/libtorrent_rasterbar_la-routing_table.lo:  \
	kademlia/$(am__dirstamp) kademlia/$(DEPDIR)/$(am__dirstamp)
kademlia/libtorrent_rasterbar_la-rpc_manager.lo:  \
	kademlia/$(am__dirstamp) kademlia/$(DEPDIR)/$(am__dirstamp)
kademlia/libtorrent_rasterbar_la-traversal_algorithm.lo:  \
	kademlia/$(am__dirstamp) kademlia/$(DEPDIR)/$(am__dirstamp)
kademlia/libtorrent_rasterbar_la-dos_blocker.lo:  \
	kademlia/$(am__dirstamp) kademlia/$(DEPDIR)/$(am__dirstamp)
kademlia/libtorrent_rasterbar_la-get_peers.lo:  \
	kademlia/$(am__dirstamp) kademlia/$(DEPDIR)/$(am__dirstamp)
kademlia/libtorrent_rasterbar_la-get_item.lo:  \
	kademlia/$(am__dirstamp) kademlia/$(DEPDIR)/$(am__dirstamp)
kademlia/libtorrent_rasterbar_la-item.lo: kademlia/$(am__dirstamp) \
	kademlia/$(DEPDIR)/$(am__dirstamp)
kademlia/libtorrent_rasterbar_la-ed25519.lo: kademlia/$(am__dirstamp) \
	kademlia/$(DEPDIR)/$(am__dirstamp)
kademlia/libtorrent_rasterbar_la-sample_infohashes.lo:  \
	kademlia/$(am__dirstamp) kademlia/$(DEPDIR)/$(am__dirstamp)
kademlia/libtorrent_rasterbar_la-dht_settings.lo:  \
	kademlia/$(am__dirstamp) kademlia/$(DEPDIR)/$(am__dirstamp)
../ed25519/src/$(am__dirstamp):
	@$(MKDIR_P) ../ed25519/src
	@: > ../ed25519/src/$(am__dirstamp)
../ed25519/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../ed25519/src/$(DEPDIR)
	@: > ../ed25519/src/$(DEPDIR)/$(am__dirstamp)
../ed25519/src/libtorrent_rasterbar_la-add_scalar.lo:  \
	../ed25519/src/$(am__dirstamp) \
	../ed25519/src/$(DEPDIR)/$(am__dirstamp)
../ed25519/src/libtorrent_rasterbar_la-fe.lo:  \
	../ed25519/src/$(am__dirstamp) \
	../ed25519/src/$(DEPDIR)/$(am__dirstamp)
../ed25519/src/libtorrent_rasterbar_la-ge.lo:  \
	../ed25519/src/$(am__dirstamp) \
	../ed25519/src/$(DEPDIR)/$(am__dirstamp)
../ed25519/src/libtorrent_rasterbar_la-key_exchange.lo:  \
	../ed25519/src/$(am__dirstamp) \
	../ed25519/src/$(DEPDIR)/$(am__dirstamp)
../ed25519/src/libtorrent_rasterbar_la-keypair.lo:  \
	../ed25519/src/$(am__dirstamp) \
	../ed25519/src/$(DEPDIR)/$(am__dirstamp)
../ed25519/src/libtorrent_rasterbar_la-sc.lo:  \
	../ed25519/src/$(am__dirstamp) \
	../ed25519/src/$(DEPDIR)/$(am__dirstamp)
../ed25519/src/libtorrent_rasterbar_la-sign.lo:  \
	../ed25519/src/$(am__dirstamp) \
	../ed25519/src/$(DEPDIR)/$(am__dirstamp)
../ed25519/src/libtorrent_rasterbar_la-verify.lo:  \
	../ed25519/src/$(am__dirstamp) \
	../ed25519/src/$(DEPDIR)/$(am__dirstamp)

libtorrent-rasterbar.la: $(libtorrent_rasterbar_la_OBJECTS) $(libtorrent_rasterbar_la_DEPENDENCIES) $(EXTRA_libtorrent_rasterbar_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libtorrent_rasterbar_la_LINK) -rpath $(libdir) $(libtorrent_rasterbar_la_OBJECTS) $(libtorrent_rasterbar_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f ../ed25519/src/*.$(OBJEXT)
	-rm -f ../ed25519/src/*.lo
	-rm -f kademlia/*.$(OBJEXT)
	-rm -f kademlia/*.lo

distclean-compile:
	-rm -f *.tab.c

include ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-add_scalar.Plo
include ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-fe.Plo
include ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-ge.Plo
include ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-key_exchange.Plo
include ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-keypair.Plo
include ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-sc.Plo
include ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-sign.Plo
include ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-verify.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-add_torrent_params.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-alert.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-alert_manager.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-announce_entry.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-assert.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-bandwidth_limit.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-bandwidth_manager.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-bandwidth_queue_entry.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-bdecode.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-bitfield.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-block_cache.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-bloom_filter.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-broadcast_socket.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-bt_peer_connection.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-chained_buffer.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-choker.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-close_reason.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-cpuid.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-crc32c.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-create_torrent.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-disk_buffer_holder.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-disk_buffer_pool.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-disk_io_job.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-disk_io_thread.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-disk_io_thread_pool.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-disk_job_fence.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-disk_job_pool.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-entry.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-enum_net.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-error_code.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-escape_string.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-ffs.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-file.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-file_pool.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-file_progress.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-file_storage.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-fingerprint.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-generate_peer_id.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-gzip.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-hasher.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-hasher512.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-hex.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-http_connection.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-http_parser.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-http_seed_connection.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-http_stream.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-http_tracker_connection.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-i2p_stream.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-identify_client.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-instantiate_connection.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-ip_filter.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-ip_notifier.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-ip_voter.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-lazy_bdecode.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-listen_socket_handle.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-lsd.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-magnet_uri.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-merkle.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-natpmp.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-openssl.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-packet_buffer.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-parse_url.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-part_file.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-path.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-pe_crypto.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-peer_class.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-peer_class_set.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-peer_connection.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-peer_connection_handle.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-peer_info.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-peer_list.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-performance_counters.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-piece_picker.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-platform_util.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-proxy_base.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-proxy_settings.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-puff.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-random.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-read_resume_data.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-receive_buffer.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-request_blocks.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-resolve_links.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-resolver.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-session.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-session_call.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-session_handle.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-session_impl.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-session_settings.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-session_stats.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-settings_pack.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-sha1.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-sha1_hash.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-sha512.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-smart_ban.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-socket_io.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-socket_type.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-socks5_stream.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-stack_allocator.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-stat.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-stat_cache.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-storage.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-storage_piece_set.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-storage_utils.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-string_util.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-tfsFile.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-time.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-timestamp_history.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-torrent.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-torrent_handle.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-torrent_info.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-torrent_peer.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-torrent_peer_allocator.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-torrent_status.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-tracker_manager.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-udp_socket.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-udp_tracker_connection.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-upnp.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-ut_metadata.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-ut_pex.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-utf8.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-utp_socket_manager.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-utp_stream.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-version.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-web_connection_base.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-web_peer_connection.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-write_resume_data.Plo
include ./$(DEPDIR)/libtorrent_rasterbar_la-xml_parse.Plo
include kademlia/$(DEPDIR)/libtorrent_rasterbar_la-dht_settings.Plo
include kademlia/$(DEPDIR)/libtorrent_rasterbar_la-dht_state.Plo
include kademlia/$(DEPDIR)/libtorrent_rasterbar_la-dht_storage.Plo
include kademlia/$(DEPDIR)/libtorrent_rasterbar_la-dht_tracker.Plo
include kademlia/$(DEPDIR)/libtorrent_rasterbar_la-dos_blocker.Plo
include kademlia/$(DEPDIR)/libtorrent_rasterbar_la-ed25519.Plo
include kademlia/$(DEPDIR)/libtorrent_rasterbar_la-find_data.Plo
include kademlia/$(DEPDIR)/libtorrent_rasterbar_la-get_item.Plo
include kademlia/$(DEPDIR)/libtorrent_rasterbar_la-get_peers.Plo
include kademlia/$(DEPDIR)/libtorrent_rasterbar_la-item.Plo
include kademlia/$(DEPDIR)/libtorrent_rasterbar_la-msg.Plo
include kademlia/$(DEPDIR)/libtorrent_rasterbar_la-node.Plo
include kademlia/$(DEPDIR)/libtorrent_rasterbar_la-node_entry.Plo
include kademlia/$(DEPDIR)/libtorrent_rasterbar_la-node_id.Plo
include kademlia/$(DEPDIR)/libtorrent_rasterbar_la-put_data.Plo
include kademlia/$(DEPDIR)/libtorrent_rasterbar_la-refresh.Plo
include kademlia/$(DEPDIR)/libtorrent_rasterbar_la-routing_table.Plo
include kademlia/$(DEPDIR)/libtorrent_rasterbar_la-rpc_manager.Plo
include kademlia/$(DEPDIR)/libtorrent_rasterbar_la-sample_infohashes.Plo
include kademlia/$(DEPDIR)/libtorrent_rasterbar_la-traversal_algorithm.Plo

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

libtorrent_rasterbar_la-web_connection_base.lo: web_connection_base.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-web_connection_base.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-web_connection_base.Tpo -c -o libtorrent_rasterbar_la-web_connection_base.lo `test -f 'web_connection_base.cpp' || echo '$(srcdir)/'`web_connection_base.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-web_connection_base.Tpo $(DEPDIR)/libtorrent_rasterbar_la-web_connection_base.Plo
#	$(AM_V_CXX)source='web_connection_base.cpp' object='libtorrent_rasterbar_la-web_connection_base.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-web_connection_base.lo `test -f 'web_connection_base.cpp' || echo '$(srcdir)/'`web_connection_base.cpp

libtorrent_rasterbar_la-alert.lo: alert.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-alert.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-alert.Tpo -c -o libtorrent_rasterbar_la-alert.lo `test -f 'alert.cpp' || echo '$(srcdir)/'`alert.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-alert.Tpo $(DEPDIR)/libtorrent_rasterbar_la-alert.Plo
#	$(AM_V_CXX)source='alert.cpp' object='libtorrent_rasterbar_la-alert.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-alert.lo `test -f 'alert.cpp' || echo '$(srcdir)/'`alert.cpp

libtorrent_rasterbar_la-alert_manager.lo: alert_manager.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-alert_manager.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-alert_manager.Tpo -c -o libtorrent_rasterbar_la-alert_manager.lo `test -f 'alert_manager.cpp' || echo '$(srcdir)/'`alert_manager.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-alert_manager.Tpo $(DEPDIR)/libtorrent_rasterbar_la-alert_manager.Plo
#	$(AM_V_CXX)source='alert_manager.cpp' object='libtorrent_rasterbar_la-alert_manager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-alert_manager.lo `test -f 'alert_manager.cpp' || echo '$(srcdir)/'`alert_manager.cpp

libtorrent_rasterbar_la-announce_entry.lo: announce_entry.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-announce_entry.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-announce_entry.Tpo -c -o libtorrent_rasterbar_la-announce_entry.lo `test -f 'announce_entry.cpp' || echo '$(srcdir)/'`announce_entry.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-announce_entry.Tpo $(DEPDIR)/libtorrent_rasterbar_la-announce_entry.Plo
#	$(AM_V_CXX)source='announce_entry.cpp' object='libtorrent_rasterbar_la-announce_entry.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-announce_entry.lo `test -f 'announce_entry.cpp' || echo '$(srcdir)/'`announce_entry.cpp

libtorrent_rasterbar_la-assert.lo: assert.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-assert.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-assert.Tpo -c -o libtorrent_rasterbar_la-assert.lo `test -f 'assert.cpp' || echo '$(srcdir)/'`assert.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-assert.Tpo $(DEPDIR)/libtorrent_rasterbar_la-assert.Plo
#	$(AM_V_CXX)source='assert.cpp' object='libtorrent_rasterbar_la-assert.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-assert.lo `test -f 'assert.cpp' || echo '$(srcdir)/'`assert.cpp

libtorrent_rasterbar_la-bandwidth_limit.lo: bandwidth_limit.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-bandwidth_limit.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-bandwidth_limit.Tpo -c -o libtorrent_rasterbar_la-bandwidth_limit.lo `test -f 'bandwidth_limit.cpp' || echo '$(srcdir)/'`bandwidth_limit.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-bandwidth_limit.Tpo $(DEPDIR)/libtorrent_rasterbar_la-bandwidth_limit.Plo
#	$(AM_V_CXX)source='bandwidth_limit.cpp' object='libtorrent_rasterbar_la-bandwidth_limit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-bandwidth_limit.lo `test -f 'bandwidth_limit.cpp' || echo '$(srcdir)/'`bandwidth_limit.cpp

libtorrent_rasterbar_la-bandwidth_manager.lo: bandwidth_manager.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-bandwidth_manager.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-bandwidth_manager.Tpo -c -o libtorrent_rasterbar_la-bandwidth_manager.lo `test -f 'bandwidth_manager.cpp' || echo '$(srcdir)/'`bandwidth_manager.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-bandwidth_manager.Tpo $(DEPDIR)/libtorrent_rasterbar_la-bandwidth_manager.Plo
#	$(AM_V_CXX)source='bandwidth_manager.cpp' object='libtorrent_rasterbar_la-bandwidth_manager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-bandwidth_manager.lo `test -f 'bandwidth_manager.cpp' || echo '$(srcdir)/'`bandwidth_manager.cpp

libtorrent_rasterbar_la-bandwidth_queue_entry.lo: bandwidth_queue_entry.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-bandwidth_queue_entry.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-bandwidth_queue_entry.Tpo -c -o libtorrent_rasterbar_la-bandwidth_queue_entry.lo `test -f 'bandwidth_queue_entry.cpp' || echo '$(srcdir)/'`bandwidth_queue_entry.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-bandwidth_queue_entry.Tpo $(DEPDIR)/libtorrent_rasterbar_la-bandwidth_queue_entry.Plo
#	$(AM_V_CXX)source='bandwidth_queue_entry.cpp' object='libtorrent_rasterbar_la-bandwidth_queue_entry.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-bandwidth_queue_entry.lo `test -f 'bandwidth_queue_entry.cpp' || echo '$(srcdir)/'`bandwidth_queue_entry.cpp

libtorrent_rasterbar_la-bdecode.lo: bdecode.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-bdecode.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-bdecode.Tpo -c -o libtorrent_rasterbar_la-bdecode.lo `test -f 'bdecode.cpp' || echo '$(srcdir)/'`bdecode.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-bdecode.Tpo $(DEPDIR)/libtorrent_rasterbar_la-bdecode.Plo
#	$(AM_V_CXX)source='bdecode.cpp' object='libtorrent_rasterbar_la-bdecode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-bdecode.lo `test -f 'bdecode.cpp' || echo '$(srcdir)/'`bdecode.cpp

libtorrent_rasterbar_la-bitfield.lo: bitfield.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-bitfield.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-bitfield.Tpo -c -o libtorrent_rasterbar_la-bitfield.lo `test -f 'bitfield.cpp' || echo '$(srcdir)/'`bitfield.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-bitfield.Tpo $(DEPDIR)/libtorrent_rasterbar_la-bitfield.Plo
#	$(AM_V_CXX)source='bitfield.cpp' object='libtorrent_rasterbar_la-bitfield.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-bitfield.lo `test -f 'bitfield.cpp' || echo '$(srcdir)/'`bitfield.cpp

libtorrent_rasterbar_la-bloom_filter.lo: bloom_filter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-bloom_filter.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-bloom_filter.Tpo -c -o libtorrent_rasterbar_la-bloom_filter.lo `test -f 'bloom_filter.cpp' || echo '$(srcdir)/'`bloom_filter.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-bloom_filter.Tpo $(DEPDIR)/libtorrent_rasterbar_la-bloom_filter.Plo
#	$(AM_V_CXX)source='bloom_filter.cpp' object='libtorrent_rasterbar_la-bloom_filter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-bloom_filter.lo `test -f 'bloom_filter.cpp' || echo '$(srcdir)/'`bloom_filter.cpp

libtorrent_rasterbar_la-broadcast_socket.lo: broadcast_socket.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-broadcast_socket.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-broadcast_socket.Tpo -c -o libtorrent_rasterbar_la-broadcast_socket.lo `test -f 'broadcast_socket.cpp' || echo '$(srcdir)/'`broadcast_socket.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-broadcast_socket.Tpo $(DEPDIR)/libtorrent_rasterbar_la-broadcast_socket.Plo
#	$(AM_V_CXX)source='broadcast_socket.cpp' object='libtorrent_rasterbar_la-broadcast_socket.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-broadcast_socket.lo `test -f 'broadcast_socket.cpp' || echo '$(srcdir)/'`broadcast_socket.cpp

libtorrent_rasterbar_la-block_cache.lo: block_cache.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-block_cache.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-block_cache.Tpo -c -o libtorrent_rasterbar_la-block_cache.lo `test -f 'block_cache.cpp' || echo '$(srcdir)/'`block_cache.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-block_cache.Tpo $(DEPDIR)/libtorrent_rasterbar_la-block_cache.Plo
#	$(AM_V_CXX)source='block_cache.cpp' object='libtorrent_rasterbar_la-block_cache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-block_cache.lo `test -f 'block_cache.cpp' || echo '$(srcdir)/'`block_cache.cpp

libtorrent_rasterbar_la-bt_peer_connection.lo: bt_peer_connection.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-bt_peer_connection.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-bt_peer_connection.Tpo -c -o libtorrent_rasterbar_la-bt_peer_connection.lo `test -f 'bt_peer_connection.cpp' || echo '$(srcdir)/'`bt_peer_connection.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-bt_peer_connection.Tpo $(DEPDIR)/libtorrent_rasterbar_la-bt_peer_connection.Plo
#	$(AM_V_CXX)source='bt_peer_connection.cpp' object='libtorrent_rasterbar_la-bt_peer_connection.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-bt_peer_connection.lo `test -f 'bt_peer_connection.cpp' || echo '$(srcdir)/'`bt_peer_connection.cpp

libtorrent_rasterbar_la-chained_buffer.lo: chained_buffer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-chained_buffer.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-chained_buffer.Tpo -c -o libtorrent_rasterbar_la-chained_buffer.lo `test -f 'chained_buffer.cpp' || echo '$(srcdir)/'`chained_buffer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-chained_buffer.Tpo $(DEPDIR)/libtorrent_rasterbar_la-chained_buffer.Plo
#	$(AM_V_CXX)source='chained_buffer.cpp' object='libtorrent_rasterbar_la-chained_buffer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-chained_buffer.lo `test -f 'chained_buffer.cpp' || echo '$(srcdir)/'`chained_buffer.cpp

libtorrent_rasterbar_la-choker.lo: choker.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-choker.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-choker.Tpo -c -o libtorrent_rasterbar_la-choker.lo `test -f 'choker.cpp' || echo '$(srcdir)/'`choker.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-choker.Tpo $(DEPDIR)/libtorrent_rasterbar_la-choker.Plo
#	$(AM_V_CXX)source='choker.cpp' object='libtorrent_rasterbar_la-choker.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-choker.lo `test -f 'choker.cpp' || echo '$(srcdir)/'`choker.cpp

libtorrent_rasterbar_la-close_reason.lo: close_reason.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-close_reason.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-close_reason.Tpo -c -o libtorrent_rasterbar_la-close_reason.lo `test -f 'close_reason.cpp' || echo '$(srcdir)/'`close_reason.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-close_reason.Tpo $(DEPDIR)/libtorrent_rasterbar_la-close_reason.Plo
#	$(AM_V_CXX)source='close_reason.cpp' object='libtorrent_rasterbar_la-close_reason.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-close_reason.lo `test -f 'close_reason.cpp' || echo '$(srcdir)/'`close_reason.cpp

libtorrent_rasterbar_la-cpuid.lo: cpuid.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-cpuid.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-cpuid.Tpo -c -o libtorrent_rasterbar_la-cpuid.lo `test -f 'cpuid.cpp' || echo '$(srcdir)/'`cpuid.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-cpuid.Tpo $(DEPDIR)/libtorrent_rasterbar_la-cpuid.Plo
#	$(AM_V_CXX)source='cpuid.cpp' object='libtorrent_rasterbar_la-cpuid.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-cpuid.lo `test -f 'cpuid.cpp' || echo '$(srcdir)/'`cpuid.cpp

libtorrent_rasterbar_la-crc32c.lo: crc32c.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-crc32c.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-crc32c.Tpo -c -o libtorrent_rasterbar_la-crc32c.lo `test -f 'crc32c.cpp' || echo '$(srcdir)/'`crc32c.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-crc32c.Tpo $(DEPDIR)/libtorrent_rasterbar_la-crc32c.Plo
#	$(AM_V_CXX)source='crc32c.cpp' object='libtorrent_rasterbar_la-crc32c.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-crc32c.lo `test -f 'crc32c.cpp' || echo '$(srcdir)/'`crc32c.cpp

libtorrent_rasterbar_la-create_torrent.lo: create_torrent.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-create_torrent.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-create_torrent.Tpo -c -o libtorrent_rasterbar_la-create_torrent.lo `test -f 'create_torrent.cpp' || echo '$(srcdir)/'`create_torrent.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-create_torrent.Tpo $(DEPDIR)/libtorrent_rasterbar_la-create_torrent.Plo
#	$(AM_V_CXX)source='create_torrent.cpp' object='libtorrent_rasterbar_la-create_torrent.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-create_torrent.lo `test -f 'create_torrent.cpp' || echo '$(srcdir)/'`create_torrent.cpp

libtorrent_rasterbar_la-disk_buffer_holder.lo: disk_buffer_holder.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-disk_buffer_holder.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-disk_buffer_holder.Tpo -c -o libtorrent_rasterbar_la-disk_buffer_holder.lo `test -f 'disk_buffer_holder.cpp' || echo '$(srcdir)/'`disk_buffer_holder.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-disk_buffer_holder.Tpo $(DEPDIR)/libtorrent_rasterbar_la-disk_buffer_holder.Plo
#	$(AM_V_CXX)source='disk_buffer_holder.cpp' object='libtorrent_rasterbar_la-disk_buffer_holder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-disk_buffer_holder.lo `test -f 'disk_buffer_holder.cpp' || echo '$(srcdir)/'`disk_buffer_holder.cpp

libtorrent_rasterbar_la-disk_buffer_pool.lo: disk_buffer_pool.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-disk_buffer_pool.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-disk_buffer_pool.Tpo -c -o libtorrent_rasterbar_la-disk_buffer_pool.lo `test -f 'disk_buffer_pool.cpp' || echo '$(srcdir)/'`disk_buffer_pool.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-disk_buffer_pool.Tpo $(DEPDIR)/libtorrent_rasterbar_la-disk_buffer_pool.Plo
#	$(AM_V_CXX)source='disk_buffer_pool.cpp' object='libtorrent_rasterbar_la-disk_buffer_pool.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-disk_buffer_pool.lo `test -f 'disk_buffer_pool.cpp' || echo '$(srcdir)/'`disk_buffer_pool.cpp

libtorrent_rasterbar_la-disk_io_job.lo: disk_io_job.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-disk_io_job.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-disk_io_job.Tpo -c -o libtorrent_rasterbar_la-disk_io_job.lo `test -f 'disk_io_job.cpp' || echo '$(srcdir)/'`disk_io_job.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-disk_io_job.Tpo $(DEPDIR)/libtorrent_rasterbar_la-disk_io_job.Plo
#	$(AM_V_CXX)source='disk_io_job.cpp' object='libtorrent_rasterbar_la-disk_io_job.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-disk_io_job.lo `test -f 'disk_io_job.cpp' || echo '$(srcdir)/'`disk_io_job.cpp

libtorrent_rasterbar_la-disk_io_thread.lo: disk_io_thread.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-disk_io_thread.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-disk_io_thread.Tpo -c -o libtorrent_rasterbar_la-disk_io_thread.lo `test -f 'disk_io_thread.cpp' || echo '$(srcdir)/'`disk_io_thread.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-disk_io_thread.Tpo $(DEPDIR)/libtorrent_rasterbar_la-disk_io_thread.Plo
#	$(AM_V_CXX)source='disk_io_thread.cpp' object='libtorrent_rasterbar_la-disk_io_thread.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-disk_io_thread.lo `test -f 'disk_io_thread.cpp' || echo '$(srcdir)/'`disk_io_thread.cpp

libtorrent_rasterbar_la-disk_io_thread_pool.lo: disk_io_thread_pool.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-disk_io_thread_pool.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-disk_io_thread_pool.Tpo -c -o libtorrent_rasterbar_la-disk_io_thread_pool.lo `test -f 'disk_io_thread_pool.cpp' || echo '$(srcdir)/'`disk_io_thread_pool.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-disk_io_thread_pool.Tpo $(DEPDIR)/libtorrent_rasterbar_la-disk_io_thread_pool.Plo
#	$(AM_V_CXX)source='disk_io_thread_pool.cpp' object='libtorrent_rasterbar_la-disk_io_thread_pool.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-disk_io_thread_pool.lo `test -f 'disk_io_thread_pool.cpp' || echo '$(srcdir)/'`disk_io_thread_pool.cpp

libtorrent_rasterbar_la-disk_job_fence.lo: disk_job_fence.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-disk_job_fence.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-disk_job_fence.Tpo -c -o libtorrent_rasterbar_la-disk_job_fence.lo `test -f 'disk_job_fence.cpp' || echo '$(srcdir)/'`disk_job_fence.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-disk_job_fence.Tpo $(DEPDIR)/libtorrent_rasterbar_la-disk_job_fence.Plo
#	$(AM_V_CXX)source='disk_job_fence.cpp' object='libtorrent_rasterbar_la-disk_job_fence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-disk_job_fence.lo `test -f 'disk_job_fence.cpp' || echo '$(srcdir)/'`disk_job_fence.cpp

libtorrent_rasterbar_la-disk_job_pool.lo: disk_job_pool.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-disk_job_pool.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-disk_job_pool.Tpo -c -o libtorrent_rasterbar_la-disk_job_pool.lo `test -f 'disk_job_pool.cpp' || echo '$(srcdir)/'`disk_job_pool.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-disk_job_pool.Tpo $(DEPDIR)/libtorrent_rasterbar_la-disk_job_pool.Plo
#	$(AM_V_CXX)source='disk_job_pool.cpp' object='libtorrent_rasterbar_la-disk_job_pool.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-disk_job_pool.lo `test -f 'disk_job_pool.cpp' || echo '$(srcdir)/'`disk_job_pool.cpp

libtorrent_rasterbar_la-entry.lo: entry.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-entry.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-entry.Tpo -c -o libtorrent_rasterbar_la-entry.lo `test -f 'entry.cpp' || echo '$(srcdir)/'`entry.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-entry.Tpo $(DEPDIR)/libtorrent_rasterbar_la-entry.Plo
#	$(AM_V_CXX)source='entry.cpp' object='libtorrent_rasterbar_la-entry.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-entry.lo `test -f 'entry.cpp' || echo '$(srcdir)/'`entry.cpp

libtorrent_rasterbar_la-enum_net.lo: enum_net.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-enum_net.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-enum_net.Tpo -c -o libtorrent_rasterbar_la-enum_net.lo `test -f 'enum_net.cpp' || echo '$(srcdir)/'`enum_net.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-enum_net.Tpo $(DEPDIR)/libtorrent_rasterbar_la-enum_net.Plo
#	$(AM_V_CXX)source='enum_net.cpp' object='libtorrent_rasterbar_la-enum_net.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-enum_net.lo `test -f 'enum_net.cpp' || echo '$(srcdir)/'`enum_net.cpp

libtorrent_rasterbar_la-error_code.lo: error_code.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-error_code.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-error_code.Tpo -c -o libtorrent_rasterbar_la-error_code.lo `test -f 'error_code.cpp' || echo '$(srcdir)/'`error_code.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-error_code.Tpo $(DEPDIR)/libtorrent_rasterbar_la-error_code.Plo
#	$(AM_V_CXX)source='error_code.cpp' object='libtorrent_rasterbar_la-error_code.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-error_code.lo `test -f 'error_code.cpp' || echo '$(srcdir)/'`error_code.cpp

libtorrent_rasterbar_la-escape_string.lo: escape_string.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-escape_string.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-escape_string.Tpo -c -o libtorrent_rasterbar_la-escape_string.lo `test -f 'escape_string.cpp' || echo '$(srcdir)/'`escape_string.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-escape_string.Tpo $(DEPDIR)/libtorrent_rasterbar_la-escape_string.Plo
#	$(AM_V_CXX)source='escape_string.cpp' object='libtorrent_rasterbar_la-escape_string.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-escape_string.lo `test -f 'escape_string.cpp' || echo '$(srcdir)/'`escape_string.cpp

libtorrent_rasterbar_la-file.lo: file.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-file.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-file.Tpo -c -o libtorrent_rasterbar_la-file.lo `test -f 'file.cpp' || echo '$(srcdir)/'`file.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-file.Tpo $(DEPDIR)/libtorrent_rasterbar_la-file.Plo
#	$(AM_V_CXX)source='file.cpp' object='libtorrent_rasterbar_la-file.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-file.lo `test -f 'file.cpp' || echo '$(srcdir)/'`file.cpp

libtorrent_rasterbar_la-tfsFile.lo: tfsFile.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-tfsFile.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-tfsFile.Tpo -c -o libtorrent_rasterbar_la-tfsFile.lo `test -f 'tfsFile.cpp' || echo '$(srcdir)/'`tfsFile.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-tfsFile.Tpo $(DEPDIR)/libtorrent_rasterbar_la-tfsFile.Plo
#	$(AM_V_CXX)source='tfsFile.cpp' object='libtorrent_rasterbar_la-tfsFile.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-tfsFile.lo `test -f 'tfsFile.cpp' || echo '$(srcdir)/'`tfsFile.cpp

libtorrent_rasterbar_la-path.lo: path.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-path.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-path.Tpo -c -o libtorrent_rasterbar_la-path.lo `test -f 'path.cpp' || echo '$(srcdir)/'`path.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-path.Tpo $(DEPDIR)/libtorrent_rasterbar_la-path.Plo
#	$(AM_V_CXX)source='path.cpp' object='libtorrent_rasterbar_la-path.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-path.lo `test -f 'path.cpp' || echo '$(srcdir)/'`path.cpp

libtorrent_rasterbar_la-file_pool.lo: file_pool.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-file_pool.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-file_pool.Tpo -c -o libtorrent_rasterbar_la-file_pool.lo `test -f 'file_pool.cpp' || echo '$(srcdir)/'`file_pool.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-file_pool.Tpo $(DEPDIR)/libtorrent_rasterbar_la-file_pool.Plo
#	$(AM_V_CXX)source='file_pool.cpp' object='libtorrent_rasterbar_la-file_pool.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-file_pool.lo `test -f 'file_pool.cpp' || echo '$(srcdir)/'`file_pool.cpp

libtorrent_rasterbar_la-file_storage.lo: file_storage.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-file_storage.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-file_storage.Tpo -c -o libtorrent_rasterbar_la-file_storage.lo `test -f 'file_storage.cpp' || echo '$(srcdir)/'`file_storage.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-file_storage.Tpo $(DEPDIR)/libtorrent_rasterbar_la-file_storage.Plo
#	$(AM_V_CXX)source='file_storage.cpp' object='libtorrent_rasterbar_la-file_storage.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-file_storage.lo `test -f 'file_storage.cpp' || echo '$(srcdir)/'`file_storage.cpp

libtorrent_rasterbar_la-fingerprint.lo: fingerprint.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-fingerprint.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-fingerprint.Tpo -c -o libtorrent_rasterbar_la-fingerprint.lo `test -f 'fingerprint.cpp' || echo '$(srcdir)/'`fingerprint.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-fingerprint.Tpo $(DEPDIR)/libtorrent_rasterbar_la-fingerprint.Plo
#	$(AM_V_CXX)source='fingerprint.cpp' object='libtorrent_rasterbar_la-fingerprint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-fingerprint.lo `test -f 'fingerprint.cpp' || echo '$(srcdir)/'`fingerprint.cpp

libtorrent_rasterbar_la-generate_peer_id.lo: generate_peer_id.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-generate_peer_id.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-generate_peer_id.Tpo -c -o libtorrent_rasterbar_la-generate_peer_id.lo `test -f 'generate_peer_id.cpp' || echo '$(srcdir)/'`generate_peer_id.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-generate_peer_id.Tpo $(DEPDIR)/libtorrent_rasterbar_la-generate_peer_id.Plo
#	$(AM_V_CXX)source='generate_peer_id.cpp' object='libtorrent_rasterbar_la-generate_peer_id.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-generate_peer_id.lo `test -f 'generate_peer_id.cpp' || echo '$(srcdir)/'`generate_peer_id.cpp

libtorrent_rasterbar_la-gzip.lo: gzip.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-gzip.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-gzip.Tpo -c -o libtorrent_rasterbar_la-gzip.lo `test -f 'gzip.cpp' || echo '$(srcdir)/'`gzip.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-gzip.Tpo $(DEPDIR)/libtorrent_rasterbar_la-gzip.Plo
#	$(AM_V_CXX)source='gzip.cpp' object='libtorrent_rasterbar_la-gzip.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-gzip.lo `test -f 'gzip.cpp' || echo '$(srcdir)/'`gzip.cpp

libtorrent_rasterbar_la-hasher.lo: hasher.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-hasher.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-hasher.Tpo -c -o libtorrent_rasterbar_la-hasher.lo `test -f 'hasher.cpp' || echo '$(srcdir)/'`hasher.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-hasher.Tpo $(DEPDIR)/libtorrent_rasterbar_la-hasher.Plo
#	$(AM_V_CXX)source='hasher.cpp' object='libtorrent_rasterbar_la-hasher.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-hasher.lo `test -f 'hasher.cpp' || echo '$(srcdir)/'`hasher.cpp

libtorrent_rasterbar_la-hex.lo: hex.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-hex.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-hex.Tpo -c -o libtorrent_rasterbar_la-hex.lo `test -f 'hex.cpp' || echo '$(srcdir)/'`hex.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-hex.Tpo $(DEPDIR)/libtorrent_rasterbar_la-hex.Plo
#	$(AM_V_CXX)source='hex.cpp' object='libtorrent_rasterbar_la-hex.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-hex.lo `test -f 'hex.cpp' || echo '$(srcdir)/'`hex.cpp

libtorrent_rasterbar_la-http_connection.lo: http_connection.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-http_connection.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-http_connection.Tpo -c -o libtorrent_rasterbar_la-http_connection.lo `test -f 'http_connection.cpp' || echo '$(srcdir)/'`http_connection.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-http_connection.Tpo $(DEPDIR)/libtorrent_rasterbar_la-http_connection.Plo
#	$(AM_V_CXX)source='http_connection.cpp' object='libtorrent_rasterbar_la-http_connection.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-http_connection.lo `test -f 'http_connection.cpp' || echo '$(srcdir)/'`http_connection.cpp

libtorrent_rasterbar_la-http_parser.lo: http_parser.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-http_parser.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-http_parser.Tpo -c -o libtorrent_rasterbar_la-http_parser.lo `test -f 'http_parser.cpp' || echo '$(srcdir)/'`http_parser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-http_parser.Tpo $(DEPDIR)/libtorrent_rasterbar_la-http_parser.Plo
#	$(AM_V_CXX)source='http_parser.cpp' object='libtorrent_rasterbar_la-http_parser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-http_parser.lo `test -f 'http_parser.cpp' || echo '$(srcdir)/'`http_parser.cpp

libtorrent_rasterbar_la-http_seed_connection.lo: http_seed_connection.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-http_seed_connection.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-http_seed_connection.Tpo -c -o libtorrent_rasterbar_la-http_seed_connection.lo `test -f 'http_seed_connection.cpp' || echo '$(srcdir)/'`http_seed_connection.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-http_seed_connection.Tpo $(DEPDIR)/libtorrent_rasterbar_la-http_seed_connection.Plo
#	$(AM_V_CXX)source='http_seed_connection.cpp' object='libtorrent_rasterbar_la-http_seed_connection.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-http_seed_connection.lo `test -f 'http_seed_connection.cpp' || echo '$(srcdir)/'`http_seed_connection.cpp

libtorrent_rasterbar_la-http_stream.lo: http_stream.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-http_stream.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-http_stream.Tpo -c -o libtorrent_rasterbar_la-http_stream.lo `test -f 'http_stream.cpp' || echo '$(srcdir)/'`http_stream.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-http_stream.Tpo $(DEPDIR)/libtorrent_rasterbar_la-http_stream.Plo
#	$(AM_V_CXX)source='http_stream.cpp' object='libtorrent_rasterbar_la-http_stream.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-http_stream.lo `test -f 'http_stream.cpp' || echo '$(srcdir)/'`http_stream.cpp

libtorrent_rasterbar_la-http_tracker_connection.lo: http_tracker_connection.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-http_tracker_connection.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-http_tracker_connection.Tpo -c -o libtorrent_rasterbar_la-http_tracker_connection.lo `test -f 'http_tracker_connection.cpp' || echo '$(srcdir)/'`http_tracker_connection.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-http_tracker_connection.Tpo $(DEPDIR)/libtorrent_rasterbar_la-http_tracker_connection.Plo
#	$(AM_V_CXX)source='http_tracker_connection.cpp' object='libtorrent_rasterbar_la-http_tracker_connection.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-http_tracker_connection.lo `test -f 'http_tracker_connection.cpp' || echo '$(srcdir)/'`http_tracker_connection.cpp

libtorrent_rasterbar_la-i2p_stream.lo: i2p_stream.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-i2p_stream.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-i2p_stream.Tpo -c -o libtorrent_rasterbar_la-i2p_stream.lo `test -f 'i2p_stream.cpp' || echo '$(srcdir)/'`i2p_stream.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-i2p_stream.Tpo $(DEPDIR)/libtorrent_rasterbar_la-i2p_stream.Plo
#	$(AM_V_CXX)source='i2p_stream.cpp' object='libtorrent_rasterbar_la-i2p_stream.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-i2p_stream.lo `test -f 'i2p_stream.cpp' || echo '$(srcdir)/'`i2p_stream.cpp

libtorrent_rasterbar_la-identify_client.lo: identify_client.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-identify_client.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-identify_client.Tpo -c -o libtorrent_rasterbar_la-identify_client.lo `test -f 'identify_client.cpp' || echo '$(srcdir)/'`identify_client.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-identify_client.Tpo $(DEPDIR)/libtorrent_rasterbar_la-identify_client.Plo
#	$(AM_V_CXX)source='identify_client.cpp' object='libtorrent_rasterbar_la-identify_client.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-identify_client.lo `test -f 'identify_client.cpp' || echo '$(srcdir)/'`identify_client.cpp

libtorrent_rasterbar_la-instantiate_connection.lo: instantiate_connection.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-instantiate_connection.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-instantiate_connection.Tpo -c -o libtorrent_rasterbar_la-instantiate_connection.lo `test -f 'instantiate_connection.cpp' || echo '$(srcdir)/'`instantiate_connection.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-instantiate_connection.Tpo $(DEPDIR)/libtorrent_rasterbar_la-instantiate_connection.Plo
#	$(AM_V_CXX)source='instantiate_connection.cpp' object='libtorrent_rasterbar_la-instantiate_connection.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-instantiate_connection.lo `test -f 'instantiate_connection.cpp' || echo '$(srcdir)/'`instantiate_connection.cpp

libtorrent_rasterbar_la-ip_filter.lo: ip_filter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-ip_filter.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-ip_filter.Tpo -c -o libtorrent_rasterbar_la-ip_filter.lo `test -f 'ip_filter.cpp' || echo '$(srcdir)/'`ip_filter.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-ip_filter.Tpo $(DEPDIR)/libtorrent_rasterbar_la-ip_filter.Plo
#	$(AM_V_CXX)source='ip_filter.cpp' object='libtorrent_rasterbar_la-ip_filter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-ip_filter.lo `test -f 'ip_filter.cpp' || echo '$(srcdir)/'`ip_filter.cpp

libtorrent_rasterbar_la-ip_notifier.lo: ip_notifier.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-ip_notifier.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-ip_notifier.Tpo -c -o libtorrent_rasterbar_la-ip_notifier.lo `test -f 'ip_notifier.cpp' || echo '$(srcdir)/'`ip_notifier.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-ip_notifier.Tpo $(DEPDIR)/libtorrent_rasterbar_la-ip_notifier.Plo
#	$(AM_V_CXX)source='ip_notifier.cpp' object='libtorrent_rasterbar_la-ip_notifier.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-ip_notifier.lo `test -f 'ip_notifier.cpp' || echo '$(srcdir)/'`ip_notifier.cpp

libtorrent_rasterbar_la-ip_voter.lo: ip_voter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-ip_voter.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-ip_voter.Tpo -c -o libtorrent_rasterbar_la-ip_voter.lo `test -f 'ip_voter.cpp' || echo '$(srcdir)/'`ip_voter.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-ip_voter.Tpo $(DEPDIR)/libtorrent_rasterbar_la-ip_voter.Plo
#	$(AM_V_CXX)source='ip_voter.cpp' object='libtorrent_rasterbar_la-ip_voter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-ip_voter.lo `test -f 'ip_voter.cpp' || echo '$(srcdir)/'`ip_voter.cpp

libtorrent_rasterbar_la-lazy_bdecode.lo: lazy_bdecode.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-lazy_bdecode.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-lazy_bdecode.Tpo -c -o libtorrent_rasterbar_la-lazy_bdecode.lo `test -f 'lazy_bdecode.cpp' || echo '$(srcdir)/'`lazy_bdecode.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-lazy_bdecode.Tpo $(DEPDIR)/libtorrent_rasterbar_la-lazy_bdecode.Plo
#	$(AM_V_CXX)source='lazy_bdecode.cpp' object='libtorrent_rasterbar_la-lazy_bdecode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-lazy_bdecode.lo `test -f 'lazy_bdecode.cpp' || echo '$(srcdir)/'`lazy_bdecode.cpp

libtorrent_rasterbar_la-listen_socket_handle.lo: listen_socket_handle.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-listen_socket_handle.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-listen_socket_handle.Tpo -c -o libtorrent_rasterbar_la-listen_socket_handle.lo `test -f 'listen_socket_handle.cpp' || echo '$(srcdir)/'`listen_socket_handle.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-listen_socket_handle.Tpo $(DEPDIR)/libtorrent_rasterbar_la-listen_socket_handle.Plo
#	$(AM_V_CXX)source='listen_socket_handle.cpp' object='libtorrent_rasterbar_la-listen_socket_handle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-listen_socket_handle.lo `test -f 'listen_socket_handle.cpp' || echo '$(srcdir)/'`listen_socket_handle.cpp

libtorrent_rasterbar_la-lsd.lo: lsd.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-lsd.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-lsd.Tpo -c -o libtorrent_rasterbar_la-lsd.lo `test -f 'lsd.cpp' || echo '$(srcdir)/'`lsd.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-lsd.Tpo $(DEPDIR)/libtorrent_rasterbar_la-lsd.Plo
#	$(AM_V_CXX)source='lsd.cpp' object='libtorrent_rasterbar_la-lsd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-lsd.lo `test -f 'lsd.cpp' || echo '$(srcdir)/'`lsd.cpp

libtorrent_rasterbar_la-magnet_uri.lo: magnet_uri.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-magnet_uri.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-magnet_uri.Tpo -c -o libtorrent_rasterbar_la-magnet_uri.lo `test -f 'magnet_uri.cpp' || echo '$(srcdir)/'`magnet_uri.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-magnet_uri.Tpo $(DEPDIR)/libtorrent_rasterbar_la-magnet_uri.Plo
#	$(AM_V_CXX)source='magnet_uri.cpp' object='libtorrent_rasterbar_la-magnet_uri.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-magnet_uri.lo `test -f 'magnet_uri.cpp' || echo '$(srcdir)/'`magnet_uri.cpp

libtorrent_rasterbar_la-merkle.lo: merkle.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-merkle.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-merkle.Tpo -c -o libtorrent_rasterbar_la-merkle.lo `test -f 'merkle.cpp' || echo '$(srcdir)/'`merkle.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-merkle.Tpo $(DEPDIR)/libtorrent_rasterbar_la-merkle.Plo
#	$(AM_V_CXX)source='merkle.cpp' object='libtorrent_rasterbar_la-merkle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-merkle.lo `test -f 'merkle.cpp' || echo '$(srcdir)/'`merkle.cpp

libtorrent_rasterbar_la-natpmp.lo: natpmp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-natpmp.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-natpmp.Tpo -c -o libtorrent_rasterbar_la-natpmp.lo `test -f 'natpmp.cpp' || echo '$(srcdir)/'`natpmp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-natpmp.Tpo $(DEPDIR)/libtorrent_rasterbar_la-natpmp.Plo
#	$(AM_V_CXX)source='natpmp.cpp' object='libtorrent_rasterbar_la-natpmp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-natpmp.lo `test -f 'natpmp.cpp' || echo '$(srcdir)/'`natpmp.cpp

libtorrent_rasterbar_la-openssl.lo: openssl.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-openssl.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-openssl.Tpo -c -o libtorrent_rasterbar_la-openssl.lo `test -f 'openssl.cpp' || echo '$(srcdir)/'`openssl.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-openssl.Tpo $(DEPDIR)/libtorrent_rasterbar_la-openssl.Plo
#	$(AM_V_CXX)source='openssl.cpp' object='libtorrent_rasterbar_la-openssl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-openssl.lo `test -f 'openssl.cpp' || echo '$(srcdir)/'`openssl.cpp

libtorrent_rasterbar_la-parse_url.lo: parse_url.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-parse_url.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-parse_url.Tpo -c -o libtorrent_rasterbar_la-parse_url.lo `test -f 'parse_url.cpp' || echo '$(srcdir)/'`parse_url.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-parse_url.Tpo $(DEPDIR)/libtorrent_rasterbar_la-parse_url.Plo
#	$(AM_V_CXX)source='parse_url.cpp' object='libtorrent_rasterbar_la-parse_url.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-parse_url.lo `test -f 'parse_url.cpp' || echo '$(srcdir)/'`parse_url.cpp

libtorrent_rasterbar_la-part_file.lo: part_file.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-part_file.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-part_file.Tpo -c -o libtorrent_rasterbar_la-part_file.lo `test -f 'part_file.cpp' || echo '$(srcdir)/'`part_file.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-part_file.Tpo $(DEPDIR)/libtorrent_rasterbar_la-part_file.Plo
#	$(AM_V_CXX)source='part_file.cpp' object='libtorrent_rasterbar_la-part_file.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-part_file.lo `test -f 'part_file.cpp' || echo '$(srcdir)/'`part_file.cpp

libtorrent_rasterbar_la-pe_crypto.lo: pe_crypto.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-pe_crypto.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-pe_crypto.Tpo -c -o libtorrent_rasterbar_la-pe_crypto.lo `test -f 'pe_crypto.cpp' || echo '$(srcdir)/'`pe_crypto.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-pe_crypto.Tpo $(DEPDIR)/libtorrent_rasterbar_la-pe_crypto.Plo
#	$(AM_V_CXX)source='pe_crypto.cpp' object='libtorrent_rasterbar_la-pe_crypto.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-pe_crypto.lo `test -f 'pe_crypto.cpp' || echo '$(srcdir)/'`pe_crypto.cpp

libtorrent_rasterbar_la-performance_counters.lo: performance_counters.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-performance_counters.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-performance_counters.Tpo -c -o libtorrent_rasterbar_la-performance_counters.lo `test -f 'performance_counters.cpp' || echo '$(srcdir)/'`performance_counters.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-performance_counters.Tpo $(DEPDIR)/libtorrent_rasterbar_la-performance_counters.Plo
#	$(AM_V_CXX)source='performance_counters.cpp' object='libtorrent_rasterbar_la-performance_counters.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-performance_counters.lo `test -f 'performance_counters.cpp' || echo '$(srcdir)/'`performance_counters.cpp

libtorrent_rasterbar_la-peer_connection.lo: peer_connection.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-peer_connection.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-peer_connection.Tpo -c -o libtorrent_rasterbar_la-peer_connection.lo `test -f 'peer_connection.cpp' || echo '$(srcdir)/'`peer_connection.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-peer_connection.Tpo $(DEPDIR)/libtorrent_rasterbar_la-peer_connection.Plo
#	$(AM_V_CXX)source='peer_connection.cpp' object='libtorrent_rasterbar_la-peer_connection.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-peer_connection.lo `test -f 'peer_connection.cpp' || echo '$(srcdir)/'`peer_connection.cpp

libtorrent_rasterbar_la-peer_connection_handle.lo: peer_connection_handle.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-peer_connection_handle.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-peer_connection_handle.Tpo -c -o libtorrent_rasterbar_la-peer_connection_handle.lo `test -f 'peer_connection_handle.cpp' || echo '$(srcdir)/'`peer_connection_handle.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-peer_connection_handle.Tpo $(DEPDIR)/libtorrent_rasterbar_la-peer_connection_handle.Plo
#	$(AM_V_CXX)source='peer_connection_handle.cpp' object='libtorrent_rasterbar_la-peer_connection_handle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-peer_connection_handle.lo `test -f 'peer_connection_handle.cpp' || echo '$(srcdir)/'`peer_connection_handle.cpp

libtorrent_rasterbar_la-peer_class.lo: peer_class.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-peer_class.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-peer_class.Tpo -c -o libtorrent_rasterbar_la-peer_class.lo `test -f 'peer_class.cpp' || echo '$(srcdir)/'`peer_class.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-peer_class.Tpo $(DEPDIR)/libtorrent_rasterbar_la-peer_class.Plo
#	$(AM_V_CXX)source='peer_class.cpp' object='libtorrent_rasterbar_la-peer_class.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-peer_class.lo `test -f 'peer_class.cpp' || echo '$(srcdir)/'`peer_class.cpp

libtorrent_rasterbar_la-peer_class_set.lo: peer_class_set.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-peer_class_set.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-peer_class_set.Tpo -c -o libtorrent_rasterbar_la-peer_class_set.lo `test -f 'peer_class_set.cpp' || echo '$(srcdir)/'`peer_class_set.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-peer_class_set.Tpo $(DEPDIR)/libtorrent_rasterbar_la-peer_class_set.Plo
#	$(AM_V_CXX)source='peer_class_set.cpp' object='libtorrent_rasterbar_la-peer_class_set.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-peer_class_set.lo `test -f 'peer_class_set.cpp' || echo '$(srcdir)/'`peer_class_set.cpp

libtorrent_rasterbar_la-piece_picker.lo: piece_picker.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-piece_picker.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-piece_picker.Tpo -c -o libtorrent_rasterbar_la-piece_picker.lo `test -f 'piece_picker.cpp' || echo '$(srcdir)/'`piece_picker.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-piece_picker.Tpo $(DEPDIR)/libtorrent_rasterbar_la-piece_picker.Plo
#	$(AM_V_CXX)source='piece_picker.cpp' object='libtorrent_rasterbar_la-piece_picker.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-piece_picker.lo `test -f 'piece_picker.cpp' || echo '$(srcdir)/'`piece_picker.cpp

libtorrent_rasterbar_la-platform_util.lo: platform_util.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-platform_util.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-platform_util.Tpo -c -o libtorrent_rasterbar_la-platform_util.lo `test -f 'platform_util.cpp' || echo '$(srcdir)/'`platform_util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-platform_util.Tpo $(DEPDIR)/libtorrent_rasterbar_la-platform_util.Plo
#	$(AM_V_CXX)source='platform_util.cpp' object='libtorrent_rasterbar_la-platform_util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-platform_util.lo `test -f 'platform_util.cpp' || echo '$(srcdir)/'`platform_util.cpp

libtorrent_rasterbar_la-packet_buffer.lo: packet_buffer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-packet_buffer.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-packet_buffer.Tpo -c -o libtorrent_rasterbar_la-packet_buffer.lo `test -f 'packet_buffer.cpp' || echo '$(srcdir)/'`packet_buffer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-packet_buffer.Tpo $(DEPDIR)/libtorrent_rasterbar_la-packet_buffer.Plo
#	$(AM_V_CXX)source='packet_buffer.cpp' object='libtorrent_rasterbar_la-packet_buffer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-packet_buffer.lo `test -f 'packet_buffer.cpp' || echo '$(srcdir)/'`packet_buffer.cpp

libtorrent_rasterbar_la-proxy_base.lo: proxy_base.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-proxy_base.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-proxy_base.Tpo -c -o libtorrent_rasterbar_la-proxy_base.lo `test -f 'proxy_base.cpp' || echo '$(srcdir)/'`proxy_base.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-proxy_base.Tpo $(DEPDIR)/libtorrent_rasterbar_la-proxy_base.Plo
#	$(AM_V_CXX)source='proxy_base.cpp' object='libtorrent_rasterbar_la-proxy_base.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-proxy_base.lo `test -f 'proxy_base.cpp' || echo '$(srcdir)/'`proxy_base.cpp

libtorrent_rasterbar_la-peer_list.lo: peer_list.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-peer_list.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-peer_list.Tpo -c -o libtorrent_rasterbar_la-peer_list.lo `test -f 'peer_list.cpp' || echo '$(srcdir)/'`peer_list.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-peer_list.Tpo $(DEPDIR)/libtorrent_rasterbar_la-peer_list.Plo
#	$(AM_V_CXX)source='peer_list.cpp' object='libtorrent_rasterbar_la-peer_list.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-peer_list.lo `test -f 'peer_list.cpp' || echo '$(srcdir)/'`peer_list.cpp

libtorrent_rasterbar_la-puff.lo: puff.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-puff.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-puff.Tpo -c -o libtorrent_rasterbar_la-puff.lo `test -f 'puff.cpp' || echo '$(srcdir)/'`puff.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-puff.Tpo $(DEPDIR)/libtorrent_rasterbar_la-puff.Plo
#	$(AM_V_CXX)source='puff.cpp' object='libtorrent_rasterbar_la-puff.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-puff.lo `test -f 'puff.cpp' || echo '$(srcdir)/'`puff.cpp

libtorrent_rasterbar_la-random.lo: random.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-random.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-random.Tpo -c -o libtorrent_rasterbar_la-random.lo `test -f 'random.cpp' || echo '$(srcdir)/'`random.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-random.Tpo $(DEPDIR)/libtorrent_rasterbar_la-random.Plo
#	$(AM_V_CXX)source='random.cpp' object='libtorrent_rasterbar_la-random.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-random.lo `test -f 'random.cpp' || echo '$(srcdir)/'`random.cpp

libtorrent_rasterbar_la-receive_buffer.lo: receive_buffer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-receive_buffer.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-receive_buffer.Tpo -c -o libtorrent_rasterbar_la-receive_buffer.lo `test -f 'receive_buffer.cpp' || echo '$(srcdir)/'`receive_buffer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-receive_buffer.Tpo $(DEPDIR)/libtorrent_rasterbar_la-receive_buffer.Plo
#	$(AM_V_CXX)source='receive_buffer.cpp' object='libtorrent_rasterbar_la-receive_buffer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-receive_buffer.lo `test -f 'receive_buffer.cpp' || echo '$(srcdir)/'`receive_buffer.cpp

libtorrent_rasterbar_la-read_resume_data.lo: read_resume_data.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-read_resume_data.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-read_resume_data.Tpo -c -o libtorrent_rasterbar_la-read_resume_data.lo `test -f 'read_resume_data.cpp' || echo '$(srcdir)/'`read_resume_data.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-read_resume_data.Tpo $(DEPDIR)/libtorrent_rasterbar_la-read_resume_data.Plo
#	$(AM_V_CXX)source='read_resume_data.cpp' object='libtorrent_rasterbar_la-read_resume_data.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-read_resume_data.lo `test -f 'read_resume_data.cpp' || echo '$(srcdir)/'`read_resume_data.cpp

libtorrent_rasterbar_la-write_resume_data.lo: write_resume_data.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-write_resume_data.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-write_resume_data.Tpo -c -o libtorrent_rasterbar_la-write_resume_data.lo `test -f 'write_resume_data.cpp' || echo '$(srcdir)/'`write_resume_data.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-write_resume_data.Tpo $(DEPDIR)/libtorrent_rasterbar_la-write_resume_data.Plo
#	$(AM_V_CXX)source='write_resume_data.cpp' object='libtorrent_rasterbar_la-write_resume_data.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-write_resume_data.lo `test -f 'write_resume_data.cpp' || echo '$(srcdir)/'`write_resume_data.cpp

libtorrent_rasterbar_la-request_blocks.lo: request_blocks.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-request_blocks.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-request_blocks.Tpo -c -o libtorrent_rasterbar_la-request_blocks.lo `test -f 'request_blocks.cpp' || echo '$(srcdir)/'`request_blocks.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-request_blocks.Tpo $(DEPDIR)/libtorrent_rasterbar_la-request_blocks.Plo
#	$(AM_V_CXX)source='request_blocks.cpp' object='libtorrent_rasterbar_la-request_blocks.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-request_blocks.lo `test -f 'request_blocks.cpp' || echo '$(srcdir)/'`request_blocks.cpp

libtorrent_rasterbar_la-resolve_links.lo: resolve_links.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-resolve_links.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-resolve_links.Tpo -c -o libtorrent_rasterbar_la-resolve_links.lo `test -f 'resolve_links.cpp' || echo '$(srcdir)/'`resolve_links.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-resolve_links.Tpo $(DEPDIR)/libtorrent_rasterbar_la-resolve_links.Plo
#	$(AM_V_CXX)source='resolve_links.cpp' object='libtorrent_rasterbar_la-resolve_links.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-resolve_links.lo `test -f 'resolve_links.cpp' || echo '$(srcdir)/'`resolve_links.cpp

libtorrent_rasterbar_la-resolver.lo: resolver.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-resolver.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-resolver.Tpo -c -o libtorrent_rasterbar_la-resolver.lo `test -f 'resolver.cpp' || echo '$(srcdir)/'`resolver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-resolver.Tpo $(DEPDIR)/libtorrent_rasterbar_la-resolver.Plo
#	$(AM_V_CXX)source='resolver.cpp' object='libtorrent_rasterbar_la-resolver.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-resolver.lo `test -f 'resolver.cpp' || echo '$(srcdir)/'`resolver.cpp

libtorrent_rasterbar_la-session.lo: session.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-session.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-session.Tpo -c -o libtorrent_rasterbar_la-session.lo `test -f 'session.cpp' || echo '$(srcdir)/'`session.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-session.Tpo $(DEPDIR)/libtorrent_rasterbar_la-session.Plo
#	$(AM_V_CXX)source='session.cpp' object='libtorrent_rasterbar_la-session.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-session.lo `test -f 'session.cpp' || echo '$(srcdir)/'`session.cpp

libtorrent_rasterbar_la-session_call.lo: session_call.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-session_call.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-session_call.Tpo -c -o libtorrent_rasterbar_la-session_call.lo `test -f 'session_call.cpp' || echo '$(srcdir)/'`session_call.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-session_call.Tpo $(DEPDIR)/libtorrent_rasterbar_la-session_call.Plo
#	$(AM_V_CXX)source='session_call.cpp' object='libtorrent_rasterbar_la-session_call.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-session_call.lo `test -f 'session_call.cpp' || echo '$(srcdir)/'`session_call.cpp

libtorrent_rasterbar_la-session_handle.lo: session_handle.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-session_handle.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-session_handle.Tpo -c -o libtorrent_rasterbar_la-session_handle.lo `test -f 'session_handle.cpp' || echo '$(srcdir)/'`session_handle.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-session_handle.Tpo $(DEPDIR)/libtorrent_rasterbar_la-session_handle.Plo
#	$(AM_V_CXX)source='session_handle.cpp' object='libtorrent_rasterbar_la-session_handle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-session_handle.lo `test -f 'session_handle.cpp' || echo '$(srcdir)/'`session_handle.cpp

libtorrent_rasterbar_la-session_impl.lo: session_impl.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-session_impl.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-session_impl.Tpo -c -o libtorrent_rasterbar_la-session_impl.lo `test -f 'session_impl.cpp' || echo '$(srcdir)/'`session_impl.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-session_impl.Tpo $(DEPDIR)/libtorrent_rasterbar_la-session_impl.Plo
#	$(AM_V_CXX)source='session_impl.cpp' object='libtorrent_rasterbar_la-session_impl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-session_impl.lo `test -f 'session_impl.cpp' || echo '$(srcdir)/'`session_impl.cpp

libtorrent_rasterbar_la-session_settings.lo: session_settings.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-session_settings.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-session_settings.Tpo -c -o libtorrent_rasterbar_la-session_settings.lo `test -f 'session_settings.cpp' || echo '$(srcdir)/'`session_settings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-session_settings.Tpo $(DEPDIR)/libtorrent_rasterbar_la-session_settings.Plo
#	$(AM_V_CXX)source='session_settings.cpp' object='libtorrent_rasterbar_la-session_settings.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-session_settings.lo `test -f 'session_settings.cpp' || echo '$(srcdir)/'`session_settings.cpp

libtorrent_rasterbar_la-proxy_settings.lo: proxy_settings.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-proxy_settings.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-proxy_settings.Tpo -c -o libtorrent_rasterbar_la-proxy_settings.lo `test -f 'proxy_settings.cpp' || echo '$(srcdir)/'`proxy_settings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-proxy_settings.Tpo $(DEPDIR)/libtorrent_rasterbar_la-proxy_settings.Plo
#	$(AM_V_CXX)source='proxy_settings.cpp' object='libtorrent_rasterbar_la-proxy_settings.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-proxy_settings.lo `test -f 'proxy_settings.cpp' || echo '$(srcdir)/'`proxy_settings.cpp

libtorrent_rasterbar_la-settings_pack.lo: settings_pack.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-settings_pack.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-settings_pack.Tpo -c -o libtorrent_rasterbar_la-settings_pack.lo `test -f 'settings_pack.cpp' || echo '$(srcdir)/'`settings_pack.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-settings_pack.Tpo $(DEPDIR)/libtorrent_rasterbar_la-settings_pack.Plo
#	$(AM_V_CXX)source='settings_pack.cpp' object='libtorrent_rasterbar_la-settings_pack.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-settings_pack.lo `test -f 'settings_pack.cpp' || echo '$(srcdir)/'`settings_pack.cpp

libtorrent_rasterbar_la-sha1_hash.lo: sha1_hash.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-sha1_hash.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-sha1_hash.Tpo -c -o libtorrent_rasterbar_la-sha1_hash.lo `test -f 'sha1_hash.cpp' || echo '$(srcdir)/'`sha1_hash.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-sha1_hash.Tpo $(DEPDIR)/libtorrent_rasterbar_la-sha1_hash.Plo
#	$(AM_V_CXX)source='sha1_hash.cpp' object='libtorrent_rasterbar_la-sha1_hash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-sha1_hash.lo `test -f 'sha1_hash.cpp' || echo '$(srcdir)/'`sha1_hash.cpp

libtorrent_rasterbar_la-smart_ban.lo: smart_ban.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-smart_ban.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-smart_ban.Tpo -c -o libtorrent_rasterbar_la-smart_ban.lo `test -f 'smart_ban.cpp' || echo '$(srcdir)/'`smart_ban.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-smart_ban.Tpo $(DEPDIR)/libtorrent_rasterbar_la-smart_ban.Plo
#	$(AM_V_CXX)source='smart_ban.cpp' object='libtorrent_rasterbar_la-smart_ban.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-smart_ban.lo `test -f 'smart_ban.cpp' || echo '$(srcdir)/'`smart_ban.cpp

libtorrent_rasterbar_la-socket_io.lo: socket_io.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-socket_io.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-socket_io.Tpo -c -o libtorrent_rasterbar_la-socket_io.lo `test -f 'socket_io.cpp' || echo '$(srcdir)/'`socket_io.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-socket_io.Tpo $(DEPDIR)/libtorrent_rasterbar_la-socket_io.Plo
#	$(AM_V_CXX)source='socket_io.cpp' object='libtorrent_rasterbar_la-socket_io.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-socket_io.lo `test -f 'socket_io.cpp' || echo '$(srcdir)/'`socket_io.cpp

libtorrent_rasterbar_la-socket_type.lo: socket_type.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-socket_type.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-socket_type.Tpo -c -o libtorrent_rasterbar_la-socket_type.lo `test -f 'socket_type.cpp' || echo '$(srcdir)/'`socket_type.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-socket_type.Tpo $(DEPDIR)/libtorrent_rasterbar_la-socket_type.Plo
#	$(AM_V_CXX)source='socket_type.cpp' object='libtorrent_rasterbar_la-socket_type.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-socket_type.lo `test -f 'socket_type.cpp' || echo '$(srcdir)/'`socket_type.cpp

libtorrent_rasterbar_la-socks5_stream.lo: socks5_stream.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-socks5_stream.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-socks5_stream.Tpo -c -o libtorrent_rasterbar_la-socks5_stream.lo `test -f 'socks5_stream.cpp' || echo '$(srcdir)/'`socks5_stream.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-socks5_stream.Tpo $(DEPDIR)/libtorrent_rasterbar_la-socks5_stream.Plo
#	$(AM_V_CXX)source='socks5_stream.cpp' object='libtorrent_rasterbar_la-socks5_stream.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-socks5_stream.lo `test -f 'socks5_stream.cpp' || echo '$(srcdir)/'`socks5_stream.cpp

libtorrent_rasterbar_la-stat.lo: stat.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-stat.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-stat.Tpo -c -o libtorrent_rasterbar_la-stat.lo `test -f 'stat.cpp' || echo '$(srcdir)/'`stat.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-stat.Tpo $(DEPDIR)/libtorrent_rasterbar_la-stat.Plo
#	$(AM_V_CXX)source='stat.cpp' object='libtorrent_rasterbar_la-stat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-stat.lo `test -f 'stat.cpp' || echo '$(srcdir)/'`stat.cpp

libtorrent_rasterbar_la-stat_cache.lo: stat_cache.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-stat_cache.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-stat_cache.Tpo -c -o libtorrent_rasterbar_la-stat_cache.lo `test -f 'stat_cache.cpp' || echo '$(srcdir)/'`stat_cache.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-stat_cache.Tpo $(DEPDIR)/libtorrent_rasterbar_la-stat_cache.Plo
#	$(AM_V_CXX)source='stat_cache.cpp' object='libtorrent_rasterbar_la-stat_cache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-stat_cache.lo `test -f 'stat_cache.cpp' || echo '$(srcdir)/'`stat_cache.cpp

libtorrent_rasterbar_la-storage.lo: storage.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-storage.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-storage.Tpo -c -o libtorrent_rasterbar_la-storage.lo `test -f 'storage.cpp' || echo '$(srcdir)/'`storage.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-storage.Tpo $(DEPDIR)/libtorrent_rasterbar_la-storage.Plo
#	$(AM_V_CXX)source='storage.cpp' object='libtorrent_rasterbar_la-storage.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-storage.lo `test -f 'storage.cpp' || echo '$(srcdir)/'`storage.cpp

libtorrent_rasterbar_la-storage_piece_set.lo: storage_piece_set.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-storage_piece_set.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-storage_piece_set.Tpo -c -o libtorrent_rasterbar_la-storage_piece_set.lo `test -f 'storage_piece_set.cpp' || echo '$(srcdir)/'`storage_piece_set.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-storage_piece_set.Tpo $(DEPDIR)/libtorrent_rasterbar_la-storage_piece_set.Plo
#	$(AM_V_CXX)source='storage_piece_set.cpp' object='libtorrent_rasterbar_la-storage_piece_set.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-storage_piece_set.lo `test -f 'storage_piece_set.cpp' || echo '$(srcdir)/'`storage_piece_set.cpp

libtorrent_rasterbar_la-storage_utils.lo: storage_utils.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-storage_utils.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-storage_utils.Tpo -c -o libtorrent_rasterbar_la-storage_utils.lo `test -f 'storage_utils.cpp' || echo '$(srcdir)/'`storage_utils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-storage_utils.Tpo $(DEPDIR)/libtorrent_rasterbar_la-storage_utils.Plo
#	$(AM_V_CXX)source='storage_utils.cpp' object='libtorrent_rasterbar_la-storage_utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-storage_utils.lo `test -f 'storage_utils.cpp' || echo '$(srcdir)/'`storage_utils.cpp

libtorrent_rasterbar_la-session_stats.lo: session_stats.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-session_stats.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-session_stats.Tpo -c -o libtorrent_rasterbar_la-session_stats.lo `test -f 'session_stats.cpp' || echo '$(srcdir)/'`session_stats.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-session_stats.Tpo $(DEPDIR)/libtorrent_rasterbar_la-session_stats.Plo
#	$(AM_V_CXX)source='session_stats.cpp' object='libtorrent_rasterbar_la-session_stats.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-session_stats.lo `test -f 'session_stats.cpp' || echo '$(srcdir)/'`session_stats.cpp

libtorrent_rasterbar_la-string_util.lo: string_util.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-string_util.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-string_util.Tpo -c -o libtorrent_rasterbar_la-string_util.lo `test -f 'string_util.cpp' || echo '$(srcdir)/'`string_util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-string_util.Tpo $(DEPDIR)/libtorrent_rasterbar_la-string_util.Plo
#	$(AM_V_CXX)source='string_util.cpp' object='libtorrent_rasterbar_la-string_util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-string_util.lo `test -f 'string_util.cpp' || echo '$(srcdir)/'`string_util.cpp

libtorrent_rasterbar_la-torrent.lo: torrent.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-torrent.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-torrent.Tpo -c -o libtorrent_rasterbar_la-torrent.lo `test -f 'torrent.cpp' || echo '$(srcdir)/'`torrent.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-torrent.Tpo $(DEPDIR)/libtorrent_rasterbar_la-torrent.Plo
#	$(AM_V_CXX)source='torrent.cpp' object='libtorrent_rasterbar_la-torrent.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-torrent.lo `test -f 'torrent.cpp' || echo '$(srcdir)/'`torrent.cpp

libtorrent_rasterbar_la-torrent_handle.lo: torrent_handle.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-torrent_handle.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-torrent_handle.Tpo -c -o libtorrent_rasterbar_la-torrent_handle.lo `test -f 'torrent_handle.cpp' || echo '$(srcdir)/'`torrent_handle.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-torrent_handle.Tpo $(DEPDIR)/libtorrent_rasterbar_la-torrent_handle.Plo
#	$(AM_V_CXX)source='torrent_handle.cpp' object='libtorrent_rasterbar_la-torrent_handle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-torrent_handle.lo `test -f 'torrent_handle.cpp' || echo '$(srcdir)/'`torrent_handle.cpp

libtorrent_rasterbar_la-torrent_info.lo: torrent_info.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-torrent_info.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-torrent_info.Tpo -c -o libtorrent_rasterbar_la-torrent_info.lo `test -f 'torrent_info.cpp' || echo '$(srcdir)/'`torrent_info.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-torrent_info.Tpo $(DEPDIR)/libtorrent_rasterbar_la-torrent_info.Plo
#	$(AM_V_CXX)source='torrent_info.cpp' object='libtorrent_rasterbar_la-torrent_info.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-torrent_info.lo `test -f 'torrent_info.cpp' || echo '$(srcdir)/'`torrent_info.cpp

libtorrent_rasterbar_la-torrent_peer.lo: torrent_peer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-torrent_peer.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-torrent_peer.Tpo -c -o libtorrent_rasterbar_la-torrent_peer.lo `test -f 'torrent_peer.cpp' || echo '$(srcdir)/'`torrent_peer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-torrent_peer.Tpo $(DEPDIR)/libtorrent_rasterbar_la-torrent_peer.Plo
#	$(AM_V_CXX)source='torrent_peer.cpp' object='libtorrent_rasterbar_la-torrent_peer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-torrent_peer.lo `test -f 'torrent_peer.cpp' || echo '$(srcdir)/'`torrent_peer.cpp

libtorrent_rasterbar_la-torrent_peer_allocator.lo: torrent_peer_allocator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-torrent_peer_allocator.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-torrent_peer_allocator.Tpo -c -o libtorrent_rasterbar_la-torrent_peer_allocator.lo `test -f 'torrent_peer_allocator.cpp' || echo '$(srcdir)/'`torrent_peer_allocator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-torrent_peer_allocator.Tpo $(DEPDIR)/libtorrent_rasterbar_la-torrent_peer_allocator.Plo
#	$(AM_V_CXX)source='torrent_peer_allocator.cpp' object='libtorrent_rasterbar_la-torrent_peer_allocator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-torrent_peer_allocator.lo `test -f 'torrent_peer_allocator.cpp' || echo '$(srcdir)/'`torrent_peer_allocator.cpp

libtorrent_rasterbar_la-torrent_status.lo: torrent_status.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-torrent_status.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-torrent_status.Tpo -c -o libtorrent_rasterbar_la-torrent_status.lo `test -f 'torrent_status.cpp' || echo '$(srcdir)/'`torrent_status.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-torrent_status.Tpo $(DEPDIR)/libtorrent_rasterbar_la-torrent_status.Plo
#	$(AM_V_CXX)source='torrent_status.cpp' object='libtorrent_rasterbar_la-torrent_status.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-torrent_status.lo `test -f 'torrent_status.cpp' || echo '$(srcdir)/'`torrent_status.cpp

libtorrent_rasterbar_la-time.lo: time.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-time.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-time.Tpo -c -o libtorrent_rasterbar_la-time.lo `test -f 'time.cpp' || echo '$(srcdir)/'`time.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-time.Tpo $(DEPDIR)/libtorrent_rasterbar_la-time.Plo
#	$(AM_V_CXX)source='time.cpp' object='libtorrent_rasterbar_la-time.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-time.lo `test -f 'time.cpp' || echo '$(srcdir)/'`time.cpp

libtorrent_rasterbar_la-timestamp_history.lo: timestamp_history.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-timestamp_history.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-timestamp_history.Tpo -c -o libtorrent_rasterbar_la-timestamp_history.lo `test -f 'timestamp_history.cpp' || echo '$(srcdir)/'`timestamp_history.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-timestamp_history.Tpo $(DEPDIR)/libtorrent_rasterbar_la-timestamp_history.Plo
#	$(AM_V_CXX)source='timestamp_history.cpp' object='libtorrent_rasterbar_la-timestamp_history.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-timestamp_history.lo `test -f 'timestamp_history.cpp' || echo '$(srcdir)/'`timestamp_history.cpp

libtorrent_rasterbar_la-tracker_manager.lo: tracker_manager.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-tracker_manager.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-tracker_manager.Tpo -c -o libtorrent_rasterbar_la-tracker_manager.lo `test -f 'tracker_manager.cpp' || echo '$(srcdir)/'`tracker_manager.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-tracker_manager.Tpo $(DEPDIR)/libtorrent_rasterbar_la-tracker_manager.Plo
#	$(AM_V_CXX)source='tracker_manager.cpp' object='libtorrent_rasterbar_la-tracker_manager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-tracker_manager.lo `test -f 'tracker_manager.cpp' || echo '$(srcdir)/'`tracker_manager.cpp

libtorrent_rasterbar_la-udp_socket.lo: udp_socket.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-udp_socket.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-udp_socket.Tpo -c -o libtorrent_rasterbar_la-udp_socket.lo `test -f 'udp_socket.cpp' || echo '$(srcdir)/'`udp_socket.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-udp_socket.Tpo $(DEPDIR)/libtorrent_rasterbar_la-udp_socket.Plo
#	$(AM_V_CXX)source='udp_socket.cpp' object='libtorrent_rasterbar_la-udp_socket.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-udp_socket.lo `test -f 'udp_socket.cpp' || echo '$(srcdir)/'`udp_socket.cpp

libtorrent_rasterbar_la-udp_tracker_connection.lo: udp_tracker_connection.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-udp_tracker_connection.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-udp_tracker_connection.Tpo -c -o libtorrent_rasterbar_la-udp_tracker_connection.lo `test -f 'udp_tracker_connection.cpp' || echo '$(srcdir)/'`udp_tracker_connection.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-udp_tracker_connection.Tpo $(DEPDIR)/libtorrent_rasterbar_la-udp_tracker_connection.Plo
#	$(AM_V_CXX)source='udp_tracker_connection.cpp' object='libtorrent_rasterbar_la-udp_tracker_connection.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-udp_tracker_connection.lo `test -f 'udp_tracker_connection.cpp' || echo '$(srcdir)/'`udp_tracker_connection.cpp

libtorrent_rasterbar_la-upnp.lo: upnp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-upnp.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-upnp.Tpo -c -o libtorrent_rasterbar_la-upnp.lo `test -f 'upnp.cpp' || echo '$(srcdir)/'`upnp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-upnp.Tpo $(DEPDIR)/libtorrent_rasterbar_la-upnp.Plo
#	$(AM_V_CXX)source='upnp.cpp' object='libtorrent_rasterbar_la-upnp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-upnp.lo `test -f 'upnp.cpp' || echo '$(srcdir)/'`upnp.cpp

libtorrent_rasterbar_la-ut_metadata.lo: ut_metadata.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-ut_metadata.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-ut_metadata.Tpo -c -o libtorrent_rasterbar_la-ut_metadata.lo `test -f 'ut_metadata.cpp' || echo '$(srcdir)/'`ut_metadata.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-ut_metadata.Tpo $(DEPDIR)/libtorrent_rasterbar_la-ut_metadata.Plo
#	$(AM_V_CXX)source='ut_metadata.cpp' object='libtorrent_rasterbar_la-ut_metadata.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-ut_metadata.lo `test -f 'ut_metadata.cpp' || echo '$(srcdir)/'`ut_metadata.cpp

libtorrent_rasterbar_la-ut_pex.lo: ut_pex.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-ut_pex.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-ut_pex.Tpo -c -o libtorrent_rasterbar_la-ut_pex.lo `test -f 'ut_pex.cpp' || echo '$(srcdir)/'`ut_pex.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-ut_pex.Tpo $(DEPDIR)/libtorrent_rasterbar_la-ut_pex.Plo
#	$(AM_V_CXX)source='ut_pex.cpp' object='libtorrent_rasterbar_la-ut_pex.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-ut_pex.lo `test -f 'ut_pex.cpp' || echo '$(srcdir)/'`ut_pex.cpp

libtorrent_rasterbar_la-utf8.lo: utf8.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-utf8.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-utf8.Tpo -c -o libtorrent_rasterbar_la-utf8.lo `test -f 'utf8.cpp' || echo '$(srcdir)/'`utf8.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-utf8.Tpo $(DEPDIR)/libtorrent_rasterbar_la-utf8.Plo
#	$(AM_V_CXX)source='utf8.cpp' object='libtorrent_rasterbar_la-utf8.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-utf8.lo `test -f 'utf8.cpp' || echo '$(srcdir)/'`utf8.cpp

libtorrent_rasterbar_la-utp_socket_manager.lo: utp_socket_manager.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-utp_socket_manager.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-utp_socket_manager.Tpo -c -o libtorrent_rasterbar_la-utp_socket_manager.lo `test -f 'utp_socket_manager.cpp' || echo '$(srcdir)/'`utp_socket_manager.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-utp_socket_manager.Tpo $(DEPDIR)/libtorrent_rasterbar_la-utp_socket_manager.Plo
#	$(AM_V_CXX)source='utp_socket_manager.cpp' object='libtorrent_rasterbar_la-utp_socket_manager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-utp_socket_manager.lo `test -f 'utp_socket_manager.cpp' || echo '$(srcdir)/'`utp_socket_manager.cpp

libtorrent_rasterbar_la-utp_stream.lo: utp_stream.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-utp_stream.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-utp_stream.Tpo -c -o libtorrent_rasterbar_la-utp_stream.lo `test -f 'utp_stream.cpp' || echo '$(srcdir)/'`utp_stream.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-utp_stream.Tpo $(DEPDIR)/libtorrent_rasterbar_la-utp_stream.Plo
#	$(AM_V_CXX)source='utp_stream.cpp' object='libtorrent_rasterbar_la-utp_stream.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-utp_stream.lo `test -f 'utp_stream.cpp' || echo '$(srcdir)/'`utp_stream.cpp

libtorrent_rasterbar_la-web_peer_connection.lo: web_peer_connection.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-web_peer_connection.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-web_peer_connection.Tpo -c -o libtorrent_rasterbar_la-web_peer_connection.lo `test -f 'web_peer_connection.cpp' || echo '$(srcdir)/'`web_peer_connection.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-web_peer_connection.Tpo $(DEPDIR)/libtorrent_rasterbar_la-web_peer_connection.Plo
#	$(AM_V_CXX)source='web_peer_connection.cpp' object='libtorrent_rasterbar_la-web_peer_connection.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-web_peer_connection.lo `test -f 'web_peer_connection.cpp' || echo '$(srcdir)/'`web_peer_connection.cpp

libtorrent_rasterbar_la-xml_parse.lo: xml_parse.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-xml_parse.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-xml_parse.Tpo -c -o libtorrent_rasterbar_la-xml_parse.lo `test -f 'xml_parse.cpp' || echo '$(srcdir)/'`xml_parse.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-xml_parse.Tpo $(DEPDIR)/libtorrent_rasterbar_la-xml_parse.Plo
#	$(AM_V_CXX)source='xml_parse.cpp' object='libtorrent_rasterbar_la-xml_parse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-xml_parse.lo `test -f 'xml_parse.cpp' || echo '$(srcdir)/'`xml_parse.cpp

libtorrent_rasterbar_la-version.lo: version.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-version.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-version.Tpo -c -o libtorrent_rasterbar_la-version.lo `test -f 'version.cpp' || echo '$(srcdir)/'`version.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-version.Tpo $(DEPDIR)/libtorrent_rasterbar_la-version.Plo
#	$(AM_V_CXX)source='version.cpp' object='libtorrent_rasterbar_la-version.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-version.lo `test -f 'version.cpp' || echo '$(srcdir)/'`version.cpp

libtorrent_rasterbar_la-file_progress.lo: file_progress.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-file_progress.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-file_progress.Tpo -c -o libtorrent_rasterbar_la-file_progress.lo `test -f 'file_progress.cpp' || echo '$(srcdir)/'`file_progress.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-file_progress.Tpo $(DEPDIR)/libtorrent_rasterbar_la-file_progress.Plo
#	$(AM_V_CXX)source='file_progress.cpp' object='libtorrent_rasterbar_la-file_progress.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-file_progress.lo `test -f 'file_progress.cpp' || echo '$(srcdir)/'`file_progress.cpp

libtorrent_rasterbar_la-ffs.lo: ffs.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-ffs.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-ffs.Tpo -c -o libtorrent_rasterbar_la-ffs.lo `test -f 'ffs.cpp' || echo '$(srcdir)/'`ffs.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-ffs.Tpo $(DEPDIR)/libtorrent_rasterbar_la-ffs.Plo
#	$(AM_V_CXX)source='ffs.cpp' object='libtorrent_rasterbar_la-ffs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-ffs.lo `test -f 'ffs.cpp' || echo '$(srcdir)/'`ffs.cpp

libtorrent_rasterbar_la-add_torrent_params.lo: add_torrent_params.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-add_torrent_params.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-add_torrent_params.Tpo -c -o libtorrent_rasterbar_la-add_torrent_params.lo `test -f 'add_torrent_params.cpp' || echo '$(srcdir)/'`add_torrent_params.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-add_torrent_params.Tpo $(DEPDIR)/libtorrent_rasterbar_la-add_torrent_params.Plo
#	$(AM_V_CXX)source='add_torrent_params.cpp' object='libtorrent_rasterbar_la-add_torrent_params.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-add_torrent_params.lo `test -f 'add_torrent_params.cpp' || echo '$(srcdir)/'`add_torrent_params.cpp

libtorrent_rasterbar_la-peer_info.lo: peer_info.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-peer_info.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-peer_info.Tpo -c -o libtorrent_rasterbar_la-peer_info.lo `test -f 'peer_info.cpp' || echo '$(srcdir)/'`peer_info.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-peer_info.Tpo $(DEPDIR)/libtorrent_rasterbar_la-peer_info.Plo
#	$(AM_V_CXX)source='peer_info.cpp' object='libtorrent_rasterbar_la-peer_info.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-peer_info.lo `test -f 'peer_info.cpp' || echo '$(srcdir)/'`peer_info.cpp

libtorrent_rasterbar_la-stack_allocator.lo: stack_allocator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-stack_allocator.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-stack_allocator.Tpo -c -o libtorrent_rasterbar_la-stack_allocator.lo `test -f 'stack_allocator.cpp' || echo '$(srcdir)/'`stack_allocator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-stack_allocator.Tpo $(DEPDIR)/libtorrent_rasterbar_la-stack_allocator.Plo
#	$(AM_V_CXX)source='stack_allocator.cpp' object='libtorrent_rasterbar_la-stack_allocator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-stack_allocator.lo `test -f 'stack_allocator.cpp' || echo '$(srcdir)/'`stack_allocator.cpp

libtorrent_rasterbar_la-sha1.lo: sha1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-sha1.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-sha1.Tpo -c -o libtorrent_rasterbar_la-sha1.lo `test -f 'sha1.cpp' || echo '$(srcdir)/'`sha1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-sha1.Tpo $(DEPDIR)/libtorrent_rasterbar_la-sha1.Plo
#	$(AM_V_CXX)source='sha1.cpp' object='libtorrent_rasterbar_la-sha1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-sha1.lo `test -f 'sha1.cpp' || echo '$(srcdir)/'`sha1.cpp

libtorrent_rasterbar_la-sha512.lo: sha512.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-sha512.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-sha512.Tpo -c -o libtorrent_rasterbar_la-sha512.lo `test -f 'sha512.cpp' || echo '$(srcdir)/'`sha512.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-sha512.Tpo $(DEPDIR)/libtorrent_rasterbar_la-sha512.Plo
#	$(AM_V_CXX)source='sha512.cpp' object='libtorrent_rasterbar_la-sha512.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-sha512.lo `test -f 'sha512.cpp' || echo '$(srcdir)/'`sha512.cpp

kademlia/libtorrent_rasterbar_la-dht_state.lo: kademlia/dht_state.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kademlia/libtorrent_rasterbar_la-dht_state.lo -MD -MP -MF kademlia/$(DEPDIR)/libtorrent_rasterbar_la-dht_state.Tpo -c -o kademlia/libtorrent_rasterbar_la-dht_state.lo `test -f 'kademlia/dht_state.cpp' || echo '$(srcdir)/'`kademlia/dht_state.cpp
	$(AM_V_at)$(am__mv) kademlia/$(DEPDIR)/libtorrent_rasterbar_la-dht_state.Tpo kademlia/$(DEPDIR)/libtorrent_rasterbar_la-dht_state.Plo
#	$(AM_V_CXX)source='kademlia/dht_state.cpp' object='kademlia/libtorrent_rasterbar_la-dht_state.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kademlia/libtorrent_rasterbar_la-dht_state.lo `test -f 'kademlia/dht_state.cpp' || echo '$(srcdir)/'`kademlia/dht_state.cpp

kademlia/libtorrent_rasterbar_la-dht_storage.lo: kademlia/dht_storage.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kademlia/libtorrent_rasterbar_la-dht_storage.lo -MD -MP -MF kademlia/$(DEPDIR)/libtorrent_rasterbar_la-dht_storage.Tpo -c -o kademlia/libtorrent_rasterbar_la-dht_storage.lo `test -f 'kademlia/dht_storage.cpp' || echo '$(srcdir)/'`kademlia/dht_storage.cpp
	$(AM_V_at)$(am__mv) kademlia/$(DEPDIR)/libtorrent_rasterbar_la-dht_storage.Tpo kademlia/$(DEPDIR)/libtorrent_rasterbar_la-dht_storage.Plo
#	$(AM_V_CXX)source='kademlia/dht_storage.cpp' object='kademlia/libtorrent_rasterbar_la-dht_storage.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kademlia/libtorrent_rasterbar_la-dht_storage.lo `test -f 'kademlia/dht_storage.cpp' || echo '$(srcdir)/'`kademlia/dht_storage.cpp

kademlia/libtorrent_rasterbar_la-dht_tracker.lo: kademlia/dht_tracker.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kademlia/libtorrent_rasterbar_la-dht_tracker.lo -MD -MP -MF kademlia/$(DEPDIR)/libtorrent_rasterbar_la-dht_tracker.Tpo -c -o kademlia/libtorrent_rasterbar_la-dht_tracker.lo `test -f 'kademlia/dht_tracker.cpp' || echo '$(srcdir)/'`kademlia/dht_tracker.cpp
	$(AM_V_at)$(am__mv) kademlia/$(DEPDIR)/libtorrent_rasterbar_la-dht_tracker.Tpo kademlia/$(DEPDIR)/libtorrent_rasterbar_la-dht_tracker.Plo
#	$(AM_V_CXX)source='kademlia/dht_tracker.cpp' object='kademlia/libtorrent_rasterbar_la-dht_tracker.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kademlia/libtorrent_rasterbar_la-dht_tracker.lo `test -f 'kademlia/dht_tracker.cpp' || echo '$(srcdir)/'`kademlia/dht_tracker.cpp

kademlia/libtorrent_rasterbar_la-find_data.lo: kademlia/find_data.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kademlia/libtorrent_rasterbar_la-find_data.lo -MD -MP -MF kademlia/$(DEPDIR)/libtorrent_rasterbar_la-find_data.Tpo -c -o kademlia/libtorrent_rasterbar_la-find_data.lo `test -f 'kademlia/find_data.cpp' || echo '$(srcdir)/'`kademlia/find_data.cpp
	$(AM_V_at)$(am__mv) kademlia/$(DEPDIR)/libtorrent_rasterbar_la-find_data.Tpo kademlia/$(DEPDIR)/libtorrent_rasterbar_la-find_data.Plo
#	$(AM_V_CXX)source='kademlia/find_data.cpp' object='kademlia/libtorrent_rasterbar_la-find_data.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kademlia/libtorrent_rasterbar_la-find_data.lo `test -f 'kademlia/find_data.cpp' || echo '$(srcdir)/'`kademlia/find_data.cpp

kademlia/libtorrent_rasterbar_la-put_data.lo: kademlia/put_data.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kademlia/libtorrent_rasterbar_la-put_data.lo -MD -MP -MF kademlia/$(DEPDIR)/libtorrent_rasterbar_la-put_data.Tpo -c -o kademlia/libtorrent_rasterbar_la-put_data.lo `test -f 'kademlia/put_data.cpp' || echo '$(srcdir)/'`kademlia/put_data.cpp
	$(AM_V_at)$(am__mv) kademlia/$(DEPDIR)/libtorrent_rasterbar_la-put_data.Tpo kademlia/$(DEPDIR)/libtorrent_rasterbar_la-put_data.Plo
#	$(AM_V_CXX)source='kademlia/put_data.cpp' object='kademlia/libtorrent_rasterbar_la-put_data.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kademlia/libtorrent_rasterbar_la-put_data.lo `test -f 'kademlia/put_data.cpp' || echo '$(srcdir)/'`kademlia/put_data.cpp

kademlia/libtorrent_rasterbar_la-msg.lo: kademlia/msg.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kademlia/libtorrent_rasterbar_la-msg.lo -MD -MP -MF kademlia/$(DEPDIR)/libtorrent_rasterbar_la-msg.Tpo -c -o kademlia/libtorrent_rasterbar_la-msg.lo `test -f 'kademlia/msg.cpp' || echo '$(srcdir)/'`kademlia/msg.cpp
	$(AM_V_at)$(am__mv) kademlia/$(DEPDIR)/libtorrent_rasterbar_la-msg.Tpo kademlia/$(DEPDIR)/libtorrent_rasterbar_la-msg.Plo
#	$(AM_V_CXX)source='kademlia/msg.cpp' object='kademlia/libtorrent_rasterbar_la-msg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kademlia/libtorrent_rasterbar_la-msg.lo `test -f 'kademlia/msg.cpp' || echo '$(srcdir)/'`kademlia/msg.cpp

kademlia/libtorrent_rasterbar_la-node.lo: kademlia/node.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kademlia/libtorrent_rasterbar_la-node.lo -MD -MP -MF kademlia/$(DEPDIR)/libtorrent_rasterbar_la-node.Tpo -c -o kademlia/libtorrent_rasterbar_la-node.lo `test -f 'kademlia/node.cpp' || echo '$(srcdir)/'`kademlia/node.cpp
	$(AM_V_at)$(am__mv) kademlia/$(DEPDIR)/libtorrent_rasterbar_la-node.Tpo kademlia/$(DEPDIR)/libtorrent_rasterbar_la-node.Plo
#	$(AM_V_CXX)source='kademlia/node.cpp' object='kademlia/libtorrent_rasterbar_la-node.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kademlia/libtorrent_rasterbar_la-node.lo `test -f 'kademlia/node.cpp' || echo '$(srcdir)/'`kademlia/node.cpp

kademlia/libtorrent_rasterbar_la-node_entry.lo: kademlia/node_entry.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kademlia/libtorrent_rasterbar_la-node_entry.lo -MD -MP -MF kademlia/$(DEPDIR)/libtorrent_rasterbar_la-node_entry.Tpo -c -o kademlia/libtorrent_rasterbar_la-node_entry.lo `test -f 'kademlia/node_entry.cpp' || echo '$(srcdir)/'`kademlia/node_entry.cpp
	$(AM_V_at)$(am__mv) kademlia/$(DEPDIR)/libtorrent_rasterbar_la-node_entry.Tpo kademlia/$(DEPDIR)/libtorrent_rasterbar_la-node_entry.Plo
#	$(AM_V_CXX)source='kademlia/node_entry.cpp' object='kademlia/libtorrent_rasterbar_la-node_entry.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kademlia/libtorrent_rasterbar_la-node_entry.lo `test -f 'kademlia/node_entry.cpp' || echo '$(srcdir)/'`kademlia/node_entry.cpp

kademlia/libtorrent_rasterbar_la-node_id.lo: kademlia/node_id.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kademlia/libtorrent_rasterbar_la-node_id.lo -MD -MP -MF kademlia/$(DEPDIR)/libtorrent_rasterbar_la-node_id.Tpo -c -o kademlia/libtorrent_rasterbar_la-node_id.lo `test -f 'kademlia/node_id.cpp' || echo '$(srcdir)/'`kademlia/node_id.cpp
	$(AM_V_at)$(am__mv) kademlia/$(DEPDIR)/libtorrent_rasterbar_la-node_id.Tpo kademlia/$(DEPDIR)/libtorrent_rasterbar_la-node_id.Plo
#	$(AM_V_CXX)source='kademlia/node_id.cpp' object='kademlia/libtorrent_rasterbar_la-node_id.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kademlia/libtorrent_rasterbar_la-node_id.lo `test -f 'kademlia/node_id.cpp' || echo '$(srcdir)/'`kademlia/node_id.cpp

kademlia/libtorrent_rasterbar_la-refresh.lo: kademlia/refresh.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kademlia/libtorrent_rasterbar_la-refresh.lo -MD -MP -MF kademlia/$(DEPDIR)/libtorrent_rasterbar_la-refresh.Tpo -c -o kademlia/libtorrent_rasterbar_la-refresh.lo `test -f 'kademlia/refresh.cpp' || echo '$(srcdir)/'`kademlia/refresh.cpp
	$(AM_V_at)$(am__mv) kademlia/$(DEPDIR)/libtorrent_rasterbar_la-refresh.Tpo kademlia/$(DEPDIR)/libtorrent_rasterbar_la-refresh.Plo
#	$(AM_V_CXX)source='kademlia/refresh.cpp' object='kademlia/libtorrent_rasterbar_la-refresh.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kademlia/libtorrent_rasterbar_la-refresh.lo `test -f 'kademlia/refresh.cpp' || echo '$(srcdir)/'`kademlia/refresh.cpp

kademlia/libtorrent_rasterbar_la-routing_table.lo: kademlia/routing_table.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kademlia/libtorrent_rasterbar_la-routing_table.lo -MD -MP -MF kademlia/$(DEPDIR)/libtorrent_rasterbar_la-routing_table.Tpo -c -o kademlia/libtorrent_rasterbar_la-routing_table.lo `test -f 'kademlia/routing_table.cpp' || echo '$(srcdir)/'`kademlia/routing_table.cpp
	$(AM_V_at)$(am__mv) kademlia/$(DEPDIR)/libtorrent_rasterbar_la-routing_table.Tpo kademlia/$(DEPDIR)/libtorrent_rasterbar_la-routing_table.Plo
#	$(AM_V_CXX)source='kademlia/routing_table.cpp' object='kademlia/libtorrent_rasterbar_la-routing_table.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kademlia/libtorrent_rasterbar_la-routing_table.lo `test -f 'kademlia/routing_table.cpp' || echo '$(srcdir)/'`kademlia/routing_table.cpp

kademlia/libtorrent_rasterbar_la-rpc_manager.lo: kademlia/rpc_manager.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kademlia/libtorrent_rasterbar_la-rpc_manager.lo -MD -MP -MF kademlia/$(DEPDIR)/libtorrent_rasterbar_la-rpc_manager.Tpo -c -o kademlia/libtorrent_rasterbar_la-rpc_manager.lo `test -f 'kademlia/rpc_manager.cpp' || echo '$(srcdir)/'`kademlia/rpc_manager.cpp
	$(AM_V_at)$(am__mv) kademlia/$(DEPDIR)/libtorrent_rasterbar_la-rpc_manager.Tpo kademlia/$(DEPDIR)/libtorrent_rasterbar_la-rpc_manager.Plo
#	$(AM_V_CXX)source='kademlia/rpc_manager.cpp' object='kademlia/libtorrent_rasterbar_la-rpc_manager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kademlia/libtorrent_rasterbar_la-rpc_manager.lo `test -f 'kademlia/rpc_manager.cpp' || echo '$(srcdir)/'`kademlia/rpc_manager.cpp

kademlia/libtorrent_rasterbar_la-traversal_algorithm.lo: kademlia/traversal_algorithm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kademlia/libtorrent_rasterbar_la-traversal_algorithm.lo -MD -MP -MF kademlia/$(DEPDIR)/libtorrent_rasterbar_la-traversal_algorithm.Tpo -c -o kademlia/libtorrent_rasterbar_la-traversal_algorithm.lo `test -f 'kademlia/traversal_algorithm.cpp' || echo '$(srcdir)/'`kademlia/traversal_algorithm.cpp
	$(AM_V_at)$(am__mv) kademlia/$(DEPDIR)/libtorrent_rasterbar_la-traversal_algorithm.Tpo kademlia/$(DEPDIR)/libtorrent_rasterbar_la-traversal_algorithm.Plo
#	$(AM_V_CXX)source='kademlia/traversal_algorithm.cpp' object='kademlia/libtorrent_rasterbar_la-traversal_algorithm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kademlia/libtorrent_rasterbar_la-traversal_algorithm.lo `test -f 'kademlia/traversal_algorithm.cpp' || echo '$(srcdir)/'`kademlia/traversal_algorithm.cpp

kademlia/libtorrent_rasterbar_la-dos_blocker.lo: kademlia/dos_blocker.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kademlia/libtorrent_rasterbar_la-dos_blocker.lo -MD -MP -MF kademlia/$(DEPDIR)/libtorrent_rasterbar_la-dos_blocker.Tpo -c -o kademlia/libtorrent_rasterbar_la-dos_blocker.lo `test -f 'kademlia/dos_blocker.cpp' || echo '$(srcdir)/'`kademlia/dos_blocker.cpp
	$(AM_V_at)$(am__mv) kademlia/$(DEPDIR)/libtorrent_rasterbar_la-dos_blocker.Tpo kademlia/$(DEPDIR)/libtorrent_rasterbar_la-dos_blocker.Plo
#	$(AM_V_CXX)source='kademlia/dos_blocker.cpp' object='kademlia/libtorrent_rasterbar_la-dos_blocker.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kademlia/libtorrent_rasterbar_la-dos_blocker.lo `test -f 'kademlia/dos_blocker.cpp' || echo '$(srcdir)/'`kademlia/dos_blocker.cpp

kademlia/libtorrent_rasterbar_la-get_peers.lo: kademlia/get_peers.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kademlia/libtorrent_rasterbar_la-get_peers.lo -MD -MP -MF kademlia/$(DEPDIR)/libtorrent_rasterbar_la-get_peers.Tpo -c -o kademlia/libtorrent_rasterbar_la-get_peers.lo `test -f 'kademlia/get_peers.cpp' || echo '$(srcdir)/'`kademlia/get_peers.cpp
	$(AM_V_at)$(am__mv) kademlia/$(DEPDIR)/libtorrent_rasterbar_la-get_peers.Tpo kademlia/$(DEPDIR)/libtorrent_rasterbar_la-get_peers.Plo
#	$(AM_V_CXX)source='kademlia/get_peers.cpp' object='kademlia/libtorrent_rasterbar_la-get_peers.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kademlia/libtorrent_rasterbar_la-get_peers.lo `test -f 'kademlia/get_peers.cpp' || echo '$(srcdir)/'`kademlia/get_peers.cpp

kademlia/libtorrent_rasterbar_la-get_item.lo: kademlia/get_item.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kademlia/libtorrent_rasterbar_la-get_item.lo -MD -MP -MF kademlia/$(DEPDIR)/libtorrent_rasterbar_la-get_item.Tpo -c -o kademlia/libtorrent_rasterbar_la-get_item.lo `test -f 'kademlia/get_item.cpp' || echo '$(srcdir)/'`kademlia/get_item.cpp
	$(AM_V_at)$(am__mv) kademlia/$(DEPDIR)/libtorrent_rasterbar_la-get_item.Tpo kademlia/$(DEPDIR)/libtorrent_rasterbar_la-get_item.Plo
#	$(AM_V_CXX)source='kademlia/get_item.cpp' object='kademlia/libtorrent_rasterbar_la-get_item.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kademlia/libtorrent_rasterbar_la-get_item.lo `test -f 'kademlia/get_item.cpp' || echo '$(srcdir)/'`kademlia/get_item.cpp

kademlia/libtorrent_rasterbar_la-item.lo: kademlia/item.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kademlia/libtorrent_rasterbar_la-item.lo -MD -MP -MF kademlia/$(DEPDIR)/libtorrent_rasterbar_la-item.Tpo -c -o kademlia/libtorrent_rasterbar_la-item.lo `test -f 'kademlia/item.cpp' || echo '$(srcdir)/'`kademlia/item.cpp
	$(AM_V_at)$(am__mv) kademlia/$(DEPDIR)/libtorrent_rasterbar_la-item.Tpo kademlia/$(DEPDIR)/libtorrent_rasterbar_la-item.Plo
#	$(AM_V_CXX)source='kademlia/item.cpp' object='kademlia/libtorrent_rasterbar_la-item.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kademlia/libtorrent_rasterbar_la-item.lo `test -f 'kademlia/item.cpp' || echo '$(srcdir)/'`kademlia/item.cpp

kademlia/libtorrent_rasterbar_la-ed25519.lo: kademlia/ed25519.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kademlia/libtorrent_rasterbar_la-ed25519.lo -MD -MP -MF kademlia/$(DEPDIR)/libtorrent_rasterbar_la-ed25519.Tpo -c -o kademlia/libtorrent_rasterbar_la-ed25519.lo `test -f 'kademlia/ed25519.cpp' || echo '$(srcdir)/'`kademlia/ed25519.cpp
	$(AM_V_at)$(am__mv) kademlia/$(DEPDIR)/libtorrent_rasterbar_la-ed25519.Tpo kademlia/$(DEPDIR)/libtorrent_rasterbar_la-ed25519.Plo
#	$(AM_V_CXX)source='kademlia/ed25519.cpp' object='kademlia/libtorrent_rasterbar_la-ed25519.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kademlia/libtorrent_rasterbar_la-ed25519.lo `test -f 'kademlia/ed25519.cpp' || echo '$(srcdir)/'`kademlia/ed25519.cpp

kademlia/libtorrent_rasterbar_la-sample_infohashes.lo: kademlia/sample_infohashes.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kademlia/libtorrent_rasterbar_la-sample_infohashes.lo -MD -MP -MF kademlia/$(DEPDIR)/libtorrent_rasterbar_la-sample_infohashes.Tpo -c -o kademlia/libtorrent_rasterbar_la-sample_infohashes.lo `test -f 'kademlia/sample_infohashes.cpp' || echo '$(srcdir)/'`kademlia/sample_infohashes.cpp
	$(AM_V_at)$(am__mv) kademlia/$(DEPDIR)/libtorrent_rasterbar_la-sample_infohashes.Tpo kademlia/$(DEPDIR)/libtorrent_rasterbar_la-sample_infohashes.Plo
#	$(AM_V_CXX)source='kademlia/sample_infohashes.cpp' object='kademlia/libtorrent_rasterbar_la-sample_infohashes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kademlia/libtorrent_rasterbar_la-sample_infohashes.lo `test -f 'kademlia/sample_infohashes.cpp' || echo '$(srcdir)/'`kademlia/sample_infohashes.cpp

kademlia/libtorrent_rasterbar_la-dht_settings.lo: kademlia/dht_settings.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kademlia/libtorrent_rasterbar_la-dht_settings.lo -MD -MP -MF kademlia/$(DEPDIR)/libtorrent_rasterbar_la-dht_settings.Tpo -c -o kademlia/libtorrent_rasterbar_la-dht_settings.lo `test -f 'kademlia/dht_settings.cpp' || echo '$(srcdir)/'`kademlia/dht_settings.cpp
	$(AM_V_at)$(am__mv) kademlia/$(DEPDIR)/libtorrent_rasterbar_la-dht_settings.Tpo kademlia/$(DEPDIR)/libtorrent_rasterbar_la-dht_settings.Plo
#	$(AM_V_CXX)source='kademlia/dht_settings.cpp' object='kademlia/libtorrent_rasterbar_la-dht_settings.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kademlia/libtorrent_rasterbar_la-dht_settings.lo `test -f 'kademlia/dht_settings.cpp' || echo '$(srcdir)/'`kademlia/dht_settings.cpp

../ed25519/src/libtorrent_rasterbar_la-add_scalar.lo: ../ed25519/src/add_scalar.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../ed25519/src/libtorrent_rasterbar_la-add_scalar.lo -MD -MP -MF ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-add_scalar.Tpo -c -o ../ed25519/src/libtorrent_rasterbar_la-add_scalar.lo `test -f '../ed25519/src/add_scalar.cpp' || echo '$(srcdir)/'`../ed25519/src/add_scalar.cpp
	$(AM_V_at)$(am__mv) ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-add_scalar.Tpo ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-add_scalar.Plo
#	$(AM_V_CXX)source='../ed25519/src/add_scalar.cpp' object='../ed25519/src/libtorrent_rasterbar_la-add_scalar.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../ed25519/src/libtorrent_rasterbar_la-add_scalar.lo `test -f '../ed25519/src/add_scalar.cpp' || echo '$(srcdir)/'`../ed25519/src/add_scalar.cpp

../ed25519/src/libtorrent_rasterbar_la-fe.lo: ../ed25519/src/fe.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../ed25519/src/libtorrent_rasterbar_la-fe.lo -MD -MP -MF ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-fe.Tpo -c -o ../ed25519/src/libtorrent_rasterbar_la-fe.lo `test -f '../ed25519/src/fe.cpp' || echo '$(srcdir)/'`../ed25519/src/fe.cpp
	$(AM_V_at)$(am__mv) ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-fe.Tpo ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-fe.Plo
#	$(AM_V_CXX)source='../ed25519/src/fe.cpp' object='../ed25519/src/libtorrent_rasterbar_la-fe.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../ed25519/src/libtorrent_rasterbar_la-fe.lo `test -f '../ed25519/src/fe.cpp' || echo '$(srcdir)/'`../ed25519/src/fe.cpp

../ed25519/src/libtorrent_rasterbar_la-ge.lo: ../ed25519/src/ge.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../ed25519/src/libtorrent_rasterbar_la-ge.lo -MD -MP -MF ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-ge.Tpo -c -o ../ed25519/src/libtorrent_rasterbar_la-ge.lo `test -f '../ed25519/src/ge.cpp' || echo '$(srcdir)/'`../ed25519/src/ge.cpp
	$(AM_V_at)$(am__mv) ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-ge.Tpo ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-ge.Plo
#	$(AM_V_CXX)source='../ed25519/src/ge.cpp' object='../ed25519/src/libtorrent_rasterbar_la-ge.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../ed25519/src/libtorrent_rasterbar_la-ge.lo `test -f '../ed25519/src/ge.cpp' || echo '$(srcdir)/'`../ed25519/src/ge.cpp

../ed25519/src/libtorrent_rasterbar_la-key_exchange.lo: ../ed25519/src/key_exchange.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../ed25519/src/libtorrent_rasterbar_la-key_exchange.lo -MD -MP -MF ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-key_exchange.Tpo -c -o ../ed25519/src/libtorrent_rasterbar_la-key_exchange.lo `test -f '../ed25519/src/key_exchange.cpp' || echo '$(srcdir)/'`../ed25519/src/key_exchange.cpp
	$(AM_V_at)$(am__mv) ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-key_exchange.Tpo ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-key_exchange.Plo
#	$(AM_V_CXX)source='../ed25519/src/key_exchange.cpp' object='../ed25519/src/libtorrent_rasterbar_la-key_exchange.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../ed25519/src/libtorrent_rasterbar_la-key_exchange.lo `test -f '../ed25519/src/key_exchange.cpp' || echo '$(srcdir)/'`../ed25519/src/key_exchange.cpp

../ed25519/src/libtorrent_rasterbar_la-keypair.lo: ../ed25519/src/keypair.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../ed25519/src/libtorrent_rasterbar_la-keypair.lo -MD -MP -MF ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-keypair.Tpo -c -o ../ed25519/src/libtorrent_rasterbar_la-keypair.lo `test -f '../ed25519/src/keypair.cpp' || echo '$(srcdir)/'`../ed25519/src/keypair.cpp
	$(AM_V_at)$(am__mv) ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-keypair.Tpo ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-keypair.Plo
#	$(AM_V_CXX)source='../ed25519/src/keypair.cpp' object='../ed25519/src/libtorrent_rasterbar_la-keypair.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../ed25519/src/libtorrent_rasterbar_la-keypair.lo `test -f '../ed25519/src/keypair.cpp' || echo '$(srcdir)/'`../ed25519/src/keypair.cpp

../ed25519/src/libtorrent_rasterbar_la-sc.lo: ../ed25519/src/sc.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../ed25519/src/libtorrent_rasterbar_la-sc.lo -MD -MP -MF ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-sc.Tpo -c -o ../ed25519/src/libtorrent_rasterbar_la-sc.lo `test -f '../ed25519/src/sc.cpp' || echo '$(srcdir)/'`../ed25519/src/sc.cpp
	$(AM_V_at)$(am__mv) ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-sc.Tpo ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-sc.Plo
#	$(AM_V_CXX)source='../ed25519/src/sc.cpp' object='../ed25519/src/libtorrent_rasterbar_la-sc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../ed25519/src/libtorrent_rasterbar_la-sc.lo `test -f '../ed25519/src/sc.cpp' || echo '$(srcdir)/'`../ed25519/src/sc.cpp

../ed25519/src/libtorrent_rasterbar_la-sign.lo: ../ed25519/src/sign.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../ed25519/src/libtorrent_rasterbar_la-sign.lo -MD -MP -MF ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-sign.Tpo -c -o ../ed25519/src/libtorrent_rasterbar_la-sign.lo `test -f '../ed25519/src/sign.cpp' || echo '$(srcdir)/'`../ed25519/src/sign.cpp
	$(AM_V_at)$(am__mv) ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-sign.Tpo ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-sign.Plo
#	$(AM_V_CXX)source='../ed25519/src/sign.cpp' object='../ed25519/src/libtorrent_rasterbar_la-sign.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../ed25519/src/libtorrent_rasterbar_la-sign.lo `test -f '../ed25519/src/sign.cpp' || echo '$(srcdir)/'`../ed25519/src/sign.cpp

../ed25519/src/libtorrent_rasterbar_la-verify.lo: ../ed25519/src/verify.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../ed25519/src/libtorrent_rasterbar_la-verify.lo -MD -MP -MF ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-verify.Tpo -c -o ../ed25519/src/libtorrent_rasterbar_la-verify.lo `test -f '../ed25519/src/verify.cpp' || echo '$(srcdir)/'`../ed25519/src/verify.cpp
	$(AM_V_at)$(am__mv) ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-verify.Tpo ../ed25519/src/$(DEPDIR)/libtorrent_rasterbar_la-verify.Plo
#	$(AM_V_CXX)source='../ed25519/src/verify.cpp' object='../ed25519/src/libtorrent_rasterbar_la-verify.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../ed25519/src/libtorrent_rasterbar_la-verify.lo `test -f '../ed25519/src/verify.cpp' || echo '$(srcdir)/'`../ed25519/src/verify.cpp

libtorrent_rasterbar_la-hasher512.lo: hasher512.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtorrent_rasterbar_la-hasher512.lo -MD -MP -MF $(DEPDIR)/libtorrent_rasterbar_la-hasher512.Tpo -c -o libtorrent_rasterbar_la-hasher512.lo `test -f 'hasher512.cpp' || echo '$(srcdir)/'`hasher512.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libtorrent_rasterbar_la-hasher512.Tpo $(DEPDIR)/libtorrent_rasterbar_la-hasher512.Plo
#	$(AM_V_CXX)source='hasher512.cpp' object='libtorrent_rasterbar_la-hasher512.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtorrent_rasterbar_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtorrent_rasterbar_la-hasher512.lo `test -f 'hasher512.cpp' || echo '$(srcdir)/'`hasher512.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf ../ed25519/src/.libs ../ed25519/src/_libs
	-rm -rf kademlia/.libs kademlia/_libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f ../ed25519/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f ../ed25519/src/$(am__dirstamp)
	-rm -f kademlia/$(DEPDIR)/$(am__dirstamp)
	-rm -f kademlia/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ../ed25519/src/$(DEPDIR) ./$(DEPDIR) kademlia/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ../ed25519/src/$(DEPDIR) ./$(DEPDIR) kademlia/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
